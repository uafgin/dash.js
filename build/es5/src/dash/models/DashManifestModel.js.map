{"version":3,"sources":["../../../../../src/dash/models/DashManifestModel.js"],"names":["DashManifestModel","instance","logger","errHandler","BASE64","context","urlUtils","getInstance","isInteger","Number","value","isFinite","Math","floor","setup","getLogger","getIsTypeOf","adaptation","type","i","len","representation","col","mimeTypeRegEx","codecs","result","found","Error","hasOwnProperty","ContentComponent_asArray","Constants","TEXT","RegExp","Representation_asArray","length","essentialProperties","getEssentialPropertiesForRepresentation","THUMBNAILS_SCHEME_ID_URIS","indexOf","schemeIdUri","IMAGE","DashConstants","CODECS","search","STPP","WVTT","FRAGMENTED_TEXT","MUXED","contentType","MIME_TYPE","test","mimeType","getIsAudio","AUDIO","getIsVideo","VIDEO","getIsFragmentedText","getIsMuxed","getIsImage","getIsTextTrack","getLanguageForAdaptation","lang","LANG","replace","getViewpointForAdaptation","VIEWPOINT","Viewpoint","getRolesForAdaptation","ROLE_ASARRAY","Role_asArray","getAccessibilityForAdaptation","ACCESSIBILITY_ASARRAY","Accessibility_asArray","getAudioChannelConfigurationForAdaptation","AUDIOCHANNELCONFIGURATION_ASARRAY","AudioChannelConfiguration_asArray","getAudioChannelConfigurationForRepresentation","getRepresentationSortFunction","a","b","bandwidth","processAdaptation","realAdaptation","Array","isArray","sort","getRealAdaptations","manifest","periodIndex","Period_asArray","AdaptationSet_asArray","getRealPeriods","getRealPeriodForIndex","index","realPeriods","getAdaptationForId","id","realAdaptations","ID","getAdaptationForIndex","getIndexForAdaptation","objectUtils","areEqual","getAdaptationsForType","adaptations","push","getCodec","representationId","addResolutionInfo","codec","width","undefined","height","getMimeType","getKID","CENC_DEFAULT_KID","getLabelsForAdaptation","Label_asArray","labelArray","text","__text","getContentProtectionData","CONTENTPROTECTION_ASARRAY","ContentProtection_asArray","getIsDynamic","isDynamic","DYNAMIC","getId","hasProfile","profile","has","profiles","getDuration","mpdDuration","MEDIA_PRESENTATION_DURATION","mediaPresentationDuration","POSITIVE_INFINITY","MAX_SAFE_INTEGER","MAX_VALUE","getBandwidth","NaN","getManifestUpdatePeriod","latencyOfLastUpdate","delay","MINIMUM_UPDATE_PERIOD","minimumUpdatePeriod","isNaN","max","getPublishTime","PUBLISH_TIME","Date","getRepresentationCount","getBitrateListForAdaptation","processedRealAdaptation","realRepresentations","map","realRepresentation","scanType","EssentialProperty_asArray","prop","getRepresentationFor","getRealAdaptationFor","voAdaptation","period","periodArray","mpd","getRepresentationsForAdaptation","voRepresentations","segmentInfo","baseUrl","baseUrls","getBaseURLsFromElement","voRepresentation","Representation","CODEC_PRIVATE_DATA","codecPrivateData","BANDWITH","WIDTH","HEIGHT","SCAN_TYPE","MAX_PLAYOUT_RATE","maxPlayoutRate","SEGMENT_BASE","SegmentBase","segmentInfoType","SEGMENT_LIST","SegmentList","SEGMENT_TIMELINE","SEGMENT_TEMPLATE","SegmentTemplate","INITIALIZATION_MINUS","initialization","split","join","BASE_URL","INITIALIZATION","Initialization","SOURCE_URL","sourceURL","RANGE","range","TIMESCALE","timescale","DURATION","segmentDuration","duration","calcSegmentDuration","SegmentTimeline","MEDIA","media","START_NUMBER","startNumber","INDEX_RANGE","indexRange","PRESENTATION_TIME_OFFSET","presentationTimeOffset","AVAILABILITY_TIME_OFFSET","availabilityTimeOffset","AVAILABILITY_TIME_COMPLETE","availabilityTimeComplete","MSETimeOffset","calcMSETimeOffset","path","segmentTimeline","s0","S_asArray","s1","d","t","presentationOffset","periodStart","start","getAdaptationsForPeriod","voPeriod","realPeriod","voAdaptations","voAdaptationSet","realAdaptationSet","AdaptationSet","getRegularPeriods","voPeriods","realPreviousPeriod","voPreviousPeriod","START","Period","parseFloat","toFixed","warn","getPeriodId","getEndTimeForLastPeriod","DEFAULT_ID","getMpd","Mpd","AVAILABILITY_START_TIME","availabilityStartTime","getTime","loadedTime","AVAILABILITY_END_TIME","availabilityEndTime","SUGGESTED_PRESENTATION_DELAY","suggestedPresentationDelay","TIMESHIFT_BUFFER_DEPTH","timeShiftBufferDepth","MAX_SEGMENT_DURATION","maxSegmentDuration","publishTime","checkConfig","MISSING_CONFIG_ERROR","periodEnd","error","DashJSError","Errors","MANIFEST_ERROR_ID_PARSE_CODE","getEventsForPeriod","eventStreams","EventStream_asArray","events","j","eventStream","EventStream","SCHEME_ID_URI","VALUE","Event_asArray","currentMpdEvent","event","Event","presentationTime","PRESENTATION_TIME","calculatedPresentationTime","Signal","Binary","messageData","decodeArray","toString","getEventStreams","inbandStreams","getEventStreamForAdaptationSet","adaptationArray","InbandEventStream_asArray","getEventStreamForRepresentation","representationArray","getUTCTimingSources","hasAST","utcTimingsArray","UTCTiming_asArray","utcTimingEntries","forEach","utcTiming","entry","UTCTiming","node","entries","BaseURL_asArray","baseUri","earlyReturn","some","BaseURL","isRelative","resolve","url","SERVICE_LOCATION","serviceLocation","DVB_PRIORITY","dvb_priority","DVB_WEIGHT","dvb_weight","getLocation","LOCATION","Location","Location_asArray","getPatchLocation","PATCH_LOCATION","PatchLocation","PatchLocation_asArray","getSuggestedPresentationDelay","getAvailabilityStartTime","getServiceDescriptions","serviceDescriptions","SERVICE_DESCRIPTION","ServiceDescription_asArray","sd","latency","playbackRate","SERVICE_DESCRIPTION_SCOPE","SERVICE_DESCRIPTION_LATENCY","target","min","SERVICE_DESCRIPTION_PLAYBACK_RATE","SERVICE_DESCRIPTION_LL_SCHEME","getSupplementalPropperties","supplementalProperties","SUPPLEMENTAL_PROPERTY","SupplementalProperty_asArray","sp","setConfig","config","__dashjs_factory_name","FactoryMaker","getSingletonFactory"],"mappings":"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","file":"DashManifestModel.js","sourcesContent":["/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport Constants from '../../streaming/constants/Constants';\r\nimport DashConstants from '../constants/DashConstants';\r\nimport Representation from '../vo/Representation';\r\nimport AdaptationSet from '../vo/AdaptationSet';\r\nimport Period from '../vo/Period';\r\nimport Mpd from '../vo/Mpd';\r\nimport UTCTiming from '../vo/UTCTiming';\r\nimport Event from '../vo/Event';\r\nimport BaseURL from '../vo/BaseURL';\r\nimport EventStream from '../vo/EventStream';\r\nimport ObjectUtils from '../../streaming/utils/ObjectUtils';\r\nimport URLUtils from '../../streaming/utils/URLUtils';\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\nimport Debug from '../../core/Debug';\r\nimport DashJSError from '../../streaming/vo/DashJSError';\r\nimport Errors from '../../core/errors/Errors';\r\nimport {THUMBNAILS_SCHEME_ID_URIS} from '../../streaming/thumbnail/ThumbnailTracks';\r\n\r\nfunction DashManifestModel() {\r\n    let instance,\r\n        logger,\r\n        errHandler,\r\n        BASE64;\r\n\r\n    const context = this.context;\r\n    const urlUtils = URLUtils(context).getInstance();\r\n\r\n    const isInteger = Number.isInteger || function (value) {\r\n        return typeof value === 'number' &&\r\n            isFinite(value) &&\r\n            Math.floor(value) === value;\r\n    };\r\n\r\n    function setup() {\r\n        logger = Debug(context).getInstance().getLogger(instance);\r\n    }\r\n\r\n    function getIsTypeOf(adaptation, type) {\r\n\r\n        let i,\r\n            len,\r\n            representation,\r\n            col,\r\n            mimeTypeRegEx,\r\n            codecs;\r\n        let result = false;\r\n        let found = false;\r\n\r\n        if (!adaptation) {\r\n            throw new Error('adaptation is not defined');\r\n        }\r\n\r\n        if (!type) {\r\n            throw new Error('type is not defined');\r\n        }\r\n\r\n        if (adaptation.hasOwnProperty('ContentComponent_asArray')) {\r\n            col = adaptation.ContentComponent_asArray;\r\n        }\r\n\r\n        mimeTypeRegEx = (type !== Constants.TEXT) ? new RegExp(type) : new RegExp('(vtt|ttml)');\r\n\r\n        if (adaptation.Representation_asArray && adaptation.Representation_asArray.length && adaptation.Representation_asArray.length > 0) {\r\n            let essentialProperties = getEssentialPropertiesForRepresentation(adaptation.Representation_asArray[0]);\r\n            if (essentialProperties && essentialProperties.length > 0 && THUMBNAILS_SCHEME_ID_URIS.indexOf(essentialProperties[0].schemeIdUri) >= 0) {\r\n                return type === Constants.IMAGE;\r\n            }\r\n            if (adaptation.Representation_asArray[0].hasOwnProperty(DashConstants.CODECS)) {\r\n                // Just check the start of the codecs string\r\n                codecs = adaptation.Representation_asArray[0].codecs;\r\n                if (codecs.search(Constants.STPP) === 0 || codecs.search(Constants.WVTT) === 0) {\r\n                    return type === Constants.FRAGMENTED_TEXT;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (col) {\r\n            if (col.length > 1) {\r\n                return (type === Constants.MUXED);\r\n            } else if (col[0] && col[0].contentType === type) {\r\n                result = true;\r\n                found = true;\r\n            }\r\n        }\r\n\r\n        if (adaptation.hasOwnProperty(DashConstants.MIME_TYPE)) {\r\n            result = mimeTypeRegEx.test(adaptation.mimeType);\r\n            found = true;\r\n        }\r\n\r\n        // couldn't find on adaptationset, so check a representation\r\n        if (!found) {\r\n            i = 0;\r\n            len = adaptation.Representation_asArray && adaptation.Representation_asArray.length ? adaptation.Representation_asArray.length : 0;\r\n            while (!found && i < len) {\r\n                representation = adaptation.Representation_asArray[i];\r\n\r\n                if (representation.hasOwnProperty(DashConstants.MIME_TYPE)) {\r\n                    result = mimeTypeRegEx.test(representation.mimeType);\r\n                    found = true;\r\n                }\r\n\r\n                i++;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    function getIsAudio(adaptation) {\r\n        return getIsTypeOf(adaptation, Constants.AUDIO);\r\n    }\r\n\r\n    function getIsVideo(adaptation) {\r\n        return getIsTypeOf(adaptation, Constants.VIDEO);\r\n    }\r\n\r\n    function getIsFragmentedText(adaptation) {\r\n        return getIsTypeOf(adaptation, Constants.FRAGMENTED_TEXT);\r\n    }\r\n\r\n    function getIsMuxed(adaptation) {\r\n        return getIsTypeOf(adaptation, Constants.MUXED);\r\n    }\r\n\r\n    function getIsImage(adaptation) {\r\n        return getIsTypeOf(adaptation, Constants.IMAGE);\r\n    }\r\n\r\n    function getIsTextTrack(type) {\r\n        return (type === 'text/vtt' || type === 'application/ttml+xml');\r\n    }\r\n\r\n    function getLanguageForAdaptation(adaptation) {\r\n        let lang = '';\r\n\r\n        if (adaptation && adaptation.hasOwnProperty(DashConstants.LANG)) {\r\n            //Filter out any other characters not allowed according to RFC5646\r\n            lang = adaptation.lang.replace(/[^A-Za-z0-9-]/g, '');\r\n        }\r\n\r\n        return lang;\r\n    }\r\n\r\n    function getViewpointForAdaptation(adaptation) {\r\n        return adaptation && adaptation.hasOwnProperty(DashConstants.VIEWPOINT) ? adaptation.Viewpoint : null;\r\n    }\r\n\r\n    function getRolesForAdaptation(adaptation) {\r\n        return adaptation && adaptation.hasOwnProperty(DashConstants.ROLE_ASARRAY) ? adaptation.Role_asArray : [];\r\n    }\r\n\r\n    function getAccessibilityForAdaptation(adaptation) {\r\n        return adaptation && adaptation.hasOwnProperty(DashConstants.ACCESSIBILITY_ASARRAY) ? adaptation.Accessibility_asArray : [];\r\n    }\r\n\r\n    function getAudioChannelConfigurationForAdaptation(adaptation) {\r\n        return adaptation && adaptation.hasOwnProperty(DashConstants.AUDIOCHANNELCONFIGURATION_ASARRAY) ? adaptation.AudioChannelConfiguration_asArray : [];\r\n    }\r\n\r\n    function getAudioChannelConfigurationForRepresentation(representation) {\r\n        return representation && representation.hasOwnProperty(DashConstants.AUDIOCHANNELCONFIGURATION_ASARRAY) ? representation.AudioChannelConfiguration_asArray : [];\r\n    }\r\n\r\n    function getRepresentationSortFunction() {\r\n        return (a, b) => a.bandwidth - b.bandwidth;\r\n    }\r\n\r\n    function processAdaptation(realAdaptation) {\r\n        if (realAdaptation && Array.isArray(realAdaptation.Representation_asArray)) {\r\n            realAdaptation.Representation_asArray.sort(getRepresentationSortFunction());\r\n        }\r\n\r\n        return realAdaptation;\r\n    }\r\n\r\n    function getRealAdaptations(manifest, periodIndex) {\r\n        return manifest && manifest.Period_asArray && isInteger(periodIndex) ? manifest.Period_asArray[periodIndex] ? manifest.Period_asArray[periodIndex].AdaptationSet_asArray : [] : [];\r\n    }\r\n\r\n    function getRealPeriods(manifest) {\r\n        return manifest && manifest.Period_asArray ? manifest.Period_asArray : [];\r\n    }\r\n\r\n    function getRealPeriodForIndex(index, manifest) {\r\n        const realPeriods = getRealPeriods(manifest);\r\n        if (realPeriods.length > 0 && isInteger(index)) {\r\n            return realPeriods[index];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function getAdaptationForId(id, manifest, periodIndex) {\r\n        const realAdaptations = getRealAdaptations(manifest, periodIndex);\r\n        let i,\r\n            len;\r\n\r\n        for (i = 0, len = realAdaptations.length; i < len; i++) {\r\n            if (realAdaptations[i].hasOwnProperty(DashConstants.ID) && realAdaptations[i].id === id) {\r\n                return realAdaptations[i];\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function getAdaptationForIndex(index, manifest, periodIndex) {\r\n        const realAdaptations = getRealAdaptations(manifest, periodIndex);\r\n        if (realAdaptations.length > 0 && isInteger(index)) {\r\n            return realAdaptations[index];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function getIndexForAdaptation(realAdaptation, manifest, periodIndex) {\r\n        if (!realAdaptation) {\r\n            return -1;\r\n        }\r\n\r\n        const realAdaptations = getRealAdaptations(manifest, periodIndex);\r\n\r\n        for (let i = 0; i < realAdaptations.length; i++) {\r\n            let objectUtils = ObjectUtils(context).getInstance();\r\n            if (objectUtils.areEqual(realAdaptations[i], realAdaptation)) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function getAdaptationsForType(manifest, periodIndex, type) {\r\n        const realAdaptations = getRealAdaptations(manifest, periodIndex);\r\n        let i,\r\n            len;\r\n        const adaptations = [];\r\n\r\n        for (i = 0, len = realAdaptations.length; i < len; i++) {\r\n            if (getIsTypeOf(realAdaptations[i], type)) {\r\n                adaptations.push(processAdaptation(realAdaptations[i]));\r\n            }\r\n        }\r\n\r\n        return adaptations;\r\n    }\r\n\r\n    function getCodec(adaptation, representationId, addResolutionInfo) {\r\n        let codec = null;\r\n\r\n        if (adaptation && adaptation.Representation_asArray && adaptation.Representation_asArray.length > 0) {\r\n            const representation = isInteger(representationId) && representationId >= 0 && representationId < adaptation.Representation_asArray.length ?\r\n                adaptation.Representation_asArray[representationId] : adaptation.Representation_asArray[0];\r\n            if (representation) {\r\n                codec = representation.mimeType + ';codecs=\"' + representation.codecs + '\"';\r\n                if (addResolutionInfo && representation.width !== undefined) {\r\n                    codec += ';width=\"' + representation.width + '\";height=\"' + representation.height + '\"';\r\n                }\r\n            }\r\n        }\r\n\r\n        // If the codec contains a profiles parameter we remove it. Otherwise it will cause problems when checking for codec capabilities of the platform\r\n        if (codec) {\r\n            codec = codec.replace(/\\sprofiles=[^;]*/g, '');\r\n        }\r\n\r\n        return codec;\r\n    }\r\n\r\n    function getMimeType(adaptation) {\r\n        return adaptation && adaptation.Representation_asArray && adaptation.Representation_asArray.length > 0 ? adaptation.Representation_asArray[0].mimeType : null;\r\n    }\r\n\r\n    function getKID(adaptation) {\r\n        if (!adaptation || !adaptation.hasOwnProperty(DashConstants.CENC_DEFAULT_KID)) {\r\n            return null;\r\n        }\r\n        return adaptation[DashConstants.CENC_DEFAULT_KID];\r\n    }\r\n\r\n    function getLabelsForAdaptation(adaptation) {\r\n        if (!adaptation || !Array.isArray(adaptation.Label_asArray)) {\r\n            return [];\r\n        }\r\n\r\n        const labelArray = [];\r\n\r\n        for (let i = 0; i < adaptation.Label_asArray.length; i++) {\r\n            labelArray.push({\r\n                lang: adaptation.Label_asArray[i].lang,\r\n                text: adaptation.Label_asArray[i].__text || adaptation.Label_asArray[i]\r\n            });\r\n        }\r\n\r\n        return labelArray;\r\n    }\r\n\r\n    function getContentProtectionData(adaptation) {\r\n        if (!adaptation || !adaptation.hasOwnProperty(DashConstants.CONTENTPROTECTION_ASARRAY) || adaptation.ContentProtection_asArray.length === 0) {\r\n            return null;\r\n        }\r\n        return adaptation.ContentProtection_asArray;\r\n    }\r\n\r\n    function getIsDynamic(manifest) {\r\n        let isDynamic = false;\r\n        if (manifest && manifest.hasOwnProperty('type')) {\r\n            isDynamic = (manifest.type === DashConstants.DYNAMIC);\r\n        }\r\n        return isDynamic;\r\n    }\r\n\r\n    function getId(manifest) {\r\n        return (manifest && manifest[DashConstants.ID]) || null;\r\n    }\r\n\r\n    function hasProfile(manifest, profile) {\r\n        let has = false;\r\n\r\n        if (manifest && manifest.profiles && manifest.profiles.length > 0) {\r\n            has = (manifest.profiles.indexOf(profile) !== -1);\r\n        }\r\n\r\n        return has;\r\n    }\r\n\r\n    function getDuration(manifest) {\r\n        let mpdDuration;\r\n        //@mediaPresentationDuration specifies the duration of the entire Media Presentation.\r\n        //If the attribute is not present, the duration of the Media Presentation is unknown.\r\n        if (manifest && manifest.hasOwnProperty(DashConstants.MEDIA_PRESENTATION_DURATION)) {\r\n            mpdDuration = manifest.mediaPresentationDuration;\r\n        } else if (manifest && manifest.type == 'dynamic') {\r\n            mpdDuration = Number.POSITIVE_INFINITY;\r\n        } else {\r\n            mpdDuration = Number.MAX_SAFE_INTEGER || Number.MAX_VALUE;\r\n        }\r\n\r\n        return mpdDuration;\r\n    }\r\n\r\n    function getBandwidth(representation) {\r\n        return representation && representation.bandwidth ? representation.bandwidth : NaN;\r\n    }\r\n\r\n    function getManifestUpdatePeriod(manifest, latencyOfLastUpdate = 0) {\r\n        let delay = NaN;\r\n        if (manifest && manifest.hasOwnProperty(DashConstants.MINIMUM_UPDATE_PERIOD)) {\r\n            delay = manifest.minimumUpdatePeriod;\r\n        }\r\n        return isNaN(delay) ? delay : Math.max(delay - latencyOfLastUpdate, 1);\r\n    }\r\n\r\n    function getPublishTime(manifest) {\r\n        return manifest && manifest.hasOwnProperty(DashConstants.PUBLISH_TIME) ? new Date(manifest[DashConstants.PUBLISH_TIME]) : null;\r\n    }\r\n\r\n    function getRepresentationCount(adaptation) {\r\n        return adaptation && Array.isArray(adaptation.Representation_asArray) ? adaptation.Representation_asArray.length : 0;\r\n    }\r\n\r\n    function getBitrateListForAdaptation(realAdaptation) {\r\n        const processedRealAdaptation = processAdaptation(realAdaptation);\r\n        const realRepresentations = processedRealAdaptation && Array.isArray(processedRealAdaptation.Representation_asArray) ? processedRealAdaptation.Representation_asArray : [];\r\n\r\n        return realRepresentations.map((realRepresentation) => {\r\n            return {\r\n                bandwidth: realRepresentation.bandwidth,\r\n                width: realRepresentation.width || 0,\r\n                height: realRepresentation.height || 0,\r\n                scanType: realRepresentation.scanType || null,\r\n                id: realRepresentation.id || null\r\n            };\r\n        });\r\n    }\r\n\r\n    function getEssentialPropertiesForRepresentation(realRepresentation) {\r\n        if (!realRepresentation || !realRepresentation.EssentialProperty_asArray || !realRepresentation.EssentialProperty_asArray.length) return null;\r\n\r\n        return realRepresentation.EssentialProperty_asArray.map((prop) => {\r\n            return {\r\n                schemeIdUri: prop.schemeIdUri,\r\n                value: prop.value\r\n            };\r\n        });\r\n    }\r\n\r\n    function getRepresentationFor(index, adaptation) {\r\n        return adaptation && adaptation.Representation_asArray && adaptation.Representation_asArray.length > 0 &&\r\n        isInteger(index) ? adaptation.Representation_asArray[index] : null;\r\n    }\r\n\r\n    function getRealAdaptationFor(voAdaptation) {\r\n        if (voAdaptation && voAdaptation.period && isInteger(voAdaptation.period.index)) {\r\n            const periodArray = voAdaptation.period.mpd.manifest.Period_asArray[voAdaptation.period.index];\r\n            if (periodArray && periodArray.AdaptationSet_asArray && isInteger(voAdaptation.index)) {\r\n                return processAdaptation(periodArray.AdaptationSet_asArray[voAdaptation.index]);\r\n            }\r\n        }\r\n    }\r\n\r\n    function getRepresentationsForAdaptation(voAdaptation) {\r\n        const voRepresentations = [];\r\n        const processedRealAdaptation = getRealAdaptationFor(voAdaptation);\r\n        let segmentInfo,\r\n            baseUrl;\r\n\r\n        if (processedRealAdaptation && processedRealAdaptation.Representation_asArray) {\r\n            // TODO: TO BE REMOVED. We should get just the baseUrl elements that affects to the representations\r\n            // that we are processing. Making it works properly will require much further changes and given\r\n            // parsing base Urls parameters is needed for our ultra low latency examples, we will\r\n            // keep this \"tricky\" code until the real (and good) solution comes\r\n            if (voAdaptation && voAdaptation.period && isInteger(voAdaptation.period.index)) {\r\n                const baseUrls = getBaseURLsFromElement(voAdaptation.period.mpd.manifest);\r\n                if (baseUrls) {\r\n                    baseUrl = baseUrls[0];\r\n                }\r\n            }\r\n            for (let i = 0, len = processedRealAdaptation.Representation_asArray.length; i < len; ++i) {\r\n                const realRepresentation = processedRealAdaptation.Representation_asArray[i];\r\n                const voRepresentation = new Representation();\r\n                voRepresentation.index = i;\r\n                voRepresentation.adaptation = voAdaptation;\r\n\r\n                if (realRepresentation.hasOwnProperty(DashConstants.ID)) {\r\n                    voRepresentation.id = realRepresentation.id;\r\n                }\r\n                if (realRepresentation.hasOwnProperty(DashConstants.CODECS)) {\r\n                    voRepresentation.codecs = realRepresentation.codecs;\r\n                }\r\n                if (realRepresentation.hasOwnProperty(DashConstants.CODEC_PRIVATE_DATA)) {\r\n                    voRepresentation.codecPrivateData = realRepresentation.codecPrivateData;\r\n                }\r\n                if (realRepresentation.hasOwnProperty(DashConstants.BANDWITH)) {\r\n                    voRepresentation.bandwidth = realRepresentation.bandwidth;\r\n                }\r\n                if (realRepresentation.hasOwnProperty(DashConstants.WIDTH)) {\r\n                    voRepresentation.width = realRepresentation.width;\r\n                }\r\n                if (realRepresentation.hasOwnProperty(DashConstants.HEIGHT)) {\r\n                    voRepresentation.height = realRepresentation.height;\r\n                }\r\n                if (realRepresentation.hasOwnProperty(DashConstants.SCAN_TYPE)) {\r\n                    voRepresentation.scanType = realRepresentation.scanType;\r\n                }\r\n                if (realRepresentation.hasOwnProperty(DashConstants.MAX_PLAYOUT_RATE)) {\r\n                    voRepresentation.maxPlayoutRate = realRepresentation.maxPlayoutRate;\r\n                }\r\n\r\n                if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_BASE)) {\r\n                    segmentInfo = realRepresentation.SegmentBase;\r\n                    voRepresentation.segmentInfoType = DashConstants.SEGMENT_BASE;\r\n                } else if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_LIST)) {\r\n                    segmentInfo = realRepresentation.SegmentList;\r\n\r\n                    if (segmentInfo.hasOwnProperty(DashConstants.SEGMENT_TIMELINE)) {\r\n                        voRepresentation.segmentInfoType = DashConstants.SEGMENT_TIMELINE;\r\n                    } else {\r\n                        voRepresentation.segmentInfoType = DashConstants.SEGMENT_LIST;\r\n                    }\r\n                } else if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_TEMPLATE)) {\r\n                    segmentInfo = realRepresentation.SegmentTemplate;\r\n\r\n                    if (segmentInfo.hasOwnProperty(DashConstants.SEGMENT_TIMELINE)) {\r\n                        voRepresentation.segmentInfoType = DashConstants.SEGMENT_TIMELINE;\r\n                    } else {\r\n                        voRepresentation.segmentInfoType = DashConstants.SEGMENT_TEMPLATE;\r\n                    }\r\n\r\n                    if (segmentInfo.hasOwnProperty(DashConstants.INITIALIZATION_MINUS)) {\r\n                        voRepresentation.initialization = segmentInfo.initialization.split('$Bandwidth$')\r\n                            .join(realRepresentation.bandwidth).split('$RepresentationID$').join(realRepresentation.id);\r\n                    }\r\n                } else {\r\n                    voRepresentation.segmentInfoType = DashConstants.BASE_URL;\r\n                }\r\n\r\n                voRepresentation.essentialProperties = getEssentialPropertiesForRepresentation(realRepresentation);\r\n\r\n                if (segmentInfo) {\r\n                    if (segmentInfo.hasOwnProperty(DashConstants.INITIALIZATION)) {\r\n                        const initialization = segmentInfo.Initialization;\r\n\r\n                        if (initialization.hasOwnProperty(DashConstants.SOURCE_URL)) {\r\n                            voRepresentation.initialization = initialization.sourceURL;\r\n                        }\r\n\r\n                        if (initialization.hasOwnProperty(DashConstants.RANGE)) {\r\n                            voRepresentation.range = initialization.range;\r\n                            // initialization source url will be determined from\r\n                            // BaseURL when resolved at load time.\r\n                        }\r\n                    } else if (realRepresentation.hasOwnProperty(DashConstants.MIME_TYPE) && getIsTextTrack(realRepresentation.mimeType)) {\r\n                        voRepresentation.range = 0;\r\n                    }\r\n\r\n                    if (segmentInfo.hasOwnProperty(DashConstants.TIMESCALE)) {\r\n                        voRepresentation.timescale = segmentInfo.timescale;\r\n                    }\r\n                    if (segmentInfo.hasOwnProperty(DashConstants.DURATION)) {\r\n                        // TODO according to the spec @maxSegmentDuration specifies the maximum duration of any Segment in any Representation in the Media Presentation\r\n                        // It is also said that for a SegmentTimeline any @d value shall not exceed the value of MPD@maxSegmentDuration, but nothing is said about\r\n                        // SegmentTemplate @duration attribute. We need to find out if @maxSegmentDuration should be used instead of calculated duration if the the duration\r\n                        // exceeds @maxSegmentDuration\r\n                        voRepresentation.segmentDuration = segmentInfo.duration / voRepresentation.timescale;\r\n                    } else if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_TEMPLATE)) {\r\n                        segmentInfo = realRepresentation.SegmentTemplate;\r\n\r\n                        if (segmentInfo.hasOwnProperty(DashConstants.SEGMENT_TIMELINE)) {\r\n                            voRepresentation.segmentDuration = calcSegmentDuration(segmentInfo.SegmentTimeline) / voRepresentation.timescale;\r\n                        }\r\n                    }\r\n                    if (segmentInfo.hasOwnProperty(DashConstants.MEDIA)) {\r\n                        voRepresentation.media = segmentInfo.media;\r\n                    }\r\n                    if (segmentInfo.hasOwnProperty(DashConstants.START_NUMBER)) {\r\n                        voRepresentation.startNumber = segmentInfo.startNumber;\r\n                    }\r\n                    if (segmentInfo.hasOwnProperty(DashConstants.INDEX_RANGE)) {\r\n                        voRepresentation.indexRange = segmentInfo.indexRange;\r\n                    }\r\n                    if (segmentInfo.hasOwnProperty(DashConstants.PRESENTATION_TIME_OFFSET)) {\r\n                        voRepresentation.presentationTimeOffset = segmentInfo.presentationTimeOffset / voRepresentation.timescale;\r\n                    }\r\n                    if (segmentInfo.hasOwnProperty(DashConstants.AVAILABILITY_TIME_OFFSET)) {\r\n                        voRepresentation.availabilityTimeOffset = segmentInfo.availabilityTimeOffset;\r\n                    } else if (baseUrl && baseUrl.availabilityTimeOffset !== undefined) {\r\n                        voRepresentation.availabilityTimeOffset = baseUrl.availabilityTimeOffset;\r\n                    }\r\n                    if (segmentInfo.hasOwnProperty(DashConstants.AVAILABILITY_TIME_COMPLETE)) {\r\n                        voRepresentation.availabilityTimeComplete = segmentInfo.availabilityTimeComplete !== 'false';\r\n                    } else if (baseUrl && baseUrl.availabilityTimeComplete !== undefined) {\r\n                        voRepresentation.availabilityTimeComplete = baseUrl.availabilityTimeComplete;\r\n                    }\r\n                }\r\n\r\n                voRepresentation.MSETimeOffset = calcMSETimeOffset(voRepresentation);\r\n                voRepresentation.path = [voAdaptation.period.index, voAdaptation.index, i];\r\n                voRepresentations.push(voRepresentation);\r\n            }\r\n        }\r\n\r\n        return voRepresentations;\r\n    }\r\n\r\n    function calcSegmentDuration(segmentTimeline) {\r\n        let s0 = segmentTimeline.S_asArray[0];\r\n        let s1 = segmentTimeline.S_asArray[1];\r\n        return s0.hasOwnProperty('d') ? s0.d : (s1.t - s0.t);\r\n    }\r\n\r\n    function calcMSETimeOffset(representation) {\r\n        // The MSEOffset is offset from AST for media. It is Period@start - presentationTimeOffset\r\n        const presentationOffset = representation.presentationTimeOffset;\r\n        const periodStart = representation.adaptation.period.start;\r\n        return (periodStart - presentationOffset);\r\n    }\r\n\r\n    function getAdaptationsForPeriod(voPeriod) {\r\n        const realPeriod = voPeriod && isInteger(voPeriod.index) ? voPeriod.mpd.manifest.Period_asArray[voPeriod.index] : null;\r\n        const voAdaptations = [];\r\n        let voAdaptationSet,\r\n            realAdaptationSet,\r\n            i;\r\n\r\n        if (realPeriod && realPeriod.AdaptationSet_asArray) {\r\n            for (i = 0; i < realPeriod.AdaptationSet_asArray.length; i++) {\r\n                realAdaptationSet = realPeriod.AdaptationSet_asArray[i];\r\n                voAdaptationSet = new AdaptationSet();\r\n                if (realAdaptationSet.hasOwnProperty(DashConstants.ID)) {\r\n                    voAdaptationSet.id = realAdaptationSet.id;\r\n                }\r\n                voAdaptationSet.index = i;\r\n                voAdaptationSet.period = voPeriod;\r\n\r\n                if (getIsMuxed(realAdaptationSet)) {\r\n                    voAdaptationSet.type = Constants.MUXED;\r\n                } else if (getIsAudio(realAdaptationSet)) {\r\n                    voAdaptationSet.type = Constants.AUDIO;\r\n                } else if (getIsVideo(realAdaptationSet)) {\r\n                    voAdaptationSet.type = Constants.VIDEO;\r\n                } else if (getIsFragmentedText(realAdaptationSet)) {\r\n                    voAdaptationSet.type = Constants.FRAGMENTED_TEXT;\r\n                } else if (getIsImage(realAdaptationSet)) {\r\n                    voAdaptationSet.type = Constants.IMAGE;\r\n                } else {\r\n                    voAdaptationSet.type = Constants.TEXT;\r\n                }\r\n                voAdaptations.push(voAdaptationSet);\r\n            }\r\n        }\r\n\r\n        return voAdaptations;\r\n    }\r\n\r\n    function getRegularPeriods(mpd) {\r\n        const isDynamic = mpd ? getIsDynamic(mpd.manifest) : false;\r\n        const voPeriods = [];\r\n        let realPreviousPeriod = null;\r\n        let realPeriod = null;\r\n        let voPreviousPeriod = null;\r\n        let voPeriod = null;\r\n        let len,\r\n            i;\r\n\r\n        for (i = 0, len = mpd && mpd.manifest && mpd.manifest.Period_asArray ? mpd.manifest.Period_asArray.length : 0; i < len; i++) {\r\n            realPeriod = mpd.manifest.Period_asArray[i];\r\n\r\n            // If the attribute @start is present in the Period, then the\r\n            // Period is a regular Period and the PeriodStart is equal\r\n            // to the value of this attribute.\r\n            if (realPeriod.hasOwnProperty(DashConstants.START)) {\r\n                voPeriod = new Period();\r\n                voPeriod.start = realPeriod.start;\r\n            }\r\n            // If the @start attribute is absent, but the previous Period\r\n            // element contains a @duration attribute then then this new\r\n            // Period is also a regular Period. The start time of the new\r\n            // Period PeriodStart is the sum of the start time of the previous\r\n            // Period PeriodStart and the value of the attribute @duration\r\n            // of the previous Period.\r\n            else if (realPreviousPeriod !== null && realPreviousPeriod.hasOwnProperty(DashConstants.DURATION) && voPreviousPeriod !== null) {\r\n                voPeriod = new Period();\r\n                voPeriod.start = parseFloat((voPreviousPeriod.start + voPreviousPeriod.duration).toFixed(5));\r\n            }\r\n            // If (i) @start attribute is absent, and (ii) the Period element\r\n            // is the first in the MPD, and (iii) the MPD@type is 'static',\r\n            // then the PeriodStart time shall be set to zero.\r\n            else if (i === 0 && !isDynamic) {\r\n                voPeriod = new Period();\r\n                voPeriod.start = 0;\r\n            }\r\n\r\n            // The Period extends until the PeriodStart of the next Period.\r\n            // The difference between the PeriodStart time of a Period and\r\n            // the PeriodStart time of the following Period.\r\n            if (voPreviousPeriod !== null && isNaN(voPreviousPeriod.duration)) {\r\n                if (voPeriod !== null) {\r\n                    voPreviousPeriod.duration = parseFloat((voPeriod.start - voPreviousPeriod.start).toFixed(5));\r\n                } else {\r\n                    logger.warn('First period duration could not be calculated because lack of start and duration period properties. This will cause timing issues during playback');\r\n                }\r\n            }\r\n\r\n            if (voPeriod !== null) {\r\n                voPeriod.id = getPeriodId(realPeriod, i);\r\n                voPeriod.index = i;\r\n                voPeriod.mpd = mpd;\r\n\r\n                if (realPeriod.hasOwnProperty(DashConstants.DURATION)) {\r\n                    voPeriod.duration = realPeriod.duration;\r\n                }\r\n\r\n                voPeriods.push(voPeriod);\r\n                realPreviousPeriod = realPeriod;\r\n                voPreviousPeriod = voPeriod;\r\n            }\r\n\r\n            realPeriod = null;\r\n            voPeriod = null;\r\n        }\r\n\r\n        if (voPeriods.length === 0) {\r\n            return voPeriods;\r\n        }\r\n\r\n        // The last Period extends until the end of the Media Presentation.\r\n        // The difference between the PeriodStart time of the last Period\r\n        // and the mpd duration\r\n        if (voPreviousPeriod !== null && isNaN(voPreviousPeriod.duration)) {\r\n            voPreviousPeriod.duration = parseFloat((getEndTimeForLastPeriod(voPreviousPeriod) - voPreviousPeriod.start).toFixed(5));\r\n        }\r\n\r\n        return voPeriods;\r\n    }\r\n\r\n    function getPeriodId(realPeriod, i) {\r\n        if (!realPeriod) {\r\n            throw new Error('Period cannot be null or undefined');\r\n        }\r\n\r\n        let id = Period.DEFAULT_ID + '_' + i;\r\n\r\n        if (realPeriod.hasOwnProperty(DashConstants.ID) && realPeriod.id.length > 0 && realPeriod.id !== '__proto__') {\r\n            id = realPeriod.id;\r\n        }\r\n\r\n        return id;\r\n    }\r\n\r\n    function getMpd(manifest) {\r\n        const mpd = new Mpd();\r\n\r\n        if (manifest) {\r\n            mpd.manifest = manifest;\r\n\r\n            if (manifest.hasOwnProperty(DashConstants.AVAILABILITY_START_TIME)) {\r\n                mpd.availabilityStartTime = new Date(manifest.availabilityStartTime.getTime());\r\n            } else {\r\n                if (manifest.loadedTime) {\r\n                    mpd.availabilityStartTime = new Date(manifest.loadedTime.getTime());\r\n                }\r\n            }\r\n\r\n            if (manifest.hasOwnProperty(DashConstants.AVAILABILITY_END_TIME)) {\r\n                mpd.availabilityEndTime = new Date(manifest.availabilityEndTime.getTime());\r\n            }\r\n\r\n            if (manifest.hasOwnProperty(DashConstants.MINIMUM_UPDATE_PERIOD)) {\r\n                mpd.minimumUpdatePeriod = manifest.minimumUpdatePeriod;\r\n            }\r\n\r\n            if (manifest.hasOwnProperty(DashConstants.MEDIA_PRESENTATION_DURATION)) {\r\n                mpd.mediaPresentationDuration = manifest.mediaPresentationDuration;\r\n            }\r\n\r\n            if (manifest.hasOwnProperty(DashConstants.SUGGESTED_PRESENTATION_DELAY)) {\r\n                mpd.suggestedPresentationDelay = manifest.suggestedPresentationDelay;\r\n            }\r\n\r\n            if (manifest.hasOwnProperty(DashConstants.TIMESHIFT_BUFFER_DEPTH)) {\r\n                mpd.timeShiftBufferDepth = manifest.timeShiftBufferDepth;\r\n            }\r\n\r\n            if (manifest.hasOwnProperty(DashConstants.MAX_SEGMENT_DURATION)) {\r\n                mpd.maxSegmentDuration = manifest.maxSegmentDuration;\r\n            }\r\n\r\n            if (manifest.hasOwnProperty(DashConstants.PUBLISH_TIME)) {\r\n                mpd.publishTime = new Date(manifest.publishTime);\r\n            }\r\n        }\r\n\r\n        return mpd;\r\n    }\r\n\r\n    function checkConfig() {\r\n        if (!errHandler || !errHandler.hasOwnProperty('error')) {\r\n            throw new Error(Constants.MISSING_CONFIG_ERROR);\r\n        }\r\n    }\r\n\r\n    function getEndTimeForLastPeriod(voPeriod) {\r\n        checkConfig();\r\n        const isDynamic = getIsDynamic(voPeriod.mpd.manifest);\r\n\r\n        let periodEnd;\r\n        if (voPeriod.mpd.manifest.mediaPresentationDuration) {\r\n            periodEnd = voPeriod.mpd.manifest.mediaPresentationDuration;\r\n        } else if (voPeriod.duration) {\r\n            periodEnd = voPeriod.duration;\r\n        } else if (isDynamic) {\r\n            periodEnd = Number.POSITIVE_INFINITY;\r\n        } else {\r\n            errHandler.error(new DashJSError(Errors.MANIFEST_ERROR_ID_PARSE_CODE, 'Must have @mediaPresentationDuration on MPD or an explicit @duration on the last period.', voPeriod));\r\n        }\r\n\r\n        return periodEnd;\r\n    }\r\n\r\n    function getEventsForPeriod(period) {\r\n        const manifest = period && period.mpd && period.mpd.manifest ? period.mpd.manifest : null;\r\n        const periodArray = manifest ? manifest.Period_asArray : null;\r\n        const eventStreams = periodArray && period && isInteger(period.index) ? periodArray[period.index].EventStream_asArray : null;\r\n        const events = [];\r\n        let i,\r\n            j;\r\n\r\n        if (eventStreams) {\r\n            for (i = 0; i < eventStreams.length; i++) {\r\n                const eventStream = new EventStream();\r\n                eventStream.period = period;\r\n                eventStream.timescale = 1;\r\n\r\n                if (eventStreams[i].hasOwnProperty(Constants.SCHEME_ID_URI)) {\r\n                    eventStream.schemeIdUri = eventStreams[i][Constants.SCHEME_ID_URI];\r\n                } else {\r\n                    throw new Error('Invalid EventStream. SchemeIdUri has to be set');\r\n                }\r\n                if (eventStreams[i].hasOwnProperty(DashConstants.TIMESCALE)) {\r\n                    eventStream.timescale = eventStreams[i][DashConstants.TIMESCALE];\r\n                }\r\n                if (eventStreams[i].hasOwnProperty(DashConstants.VALUE)) {\r\n                    eventStream.value = eventStreams[i][DashConstants.VALUE];\r\n                }\r\n                if (eventStreams[i].hasOwnProperty(DashConstants.PRESENTATION_TIME_OFFSET)) {\r\n                    eventStream.presentationTimeOffset = eventStreams[i][DashConstants.PRESENTATION_TIME_OFFSET];\r\n                }\r\n                for (j = 0; eventStreams[i].Event_asArray && j < eventStreams[i].Event_asArray.length; j++) {\r\n                    const currentMpdEvent = eventStreams[i].Event_asArray[j];\r\n                    const event = new Event();\r\n                    event.presentationTime = 0;\r\n                    event.eventStream = eventStream;\r\n\r\n                    if (currentMpdEvent.hasOwnProperty(DashConstants.PRESENTATION_TIME)) {\r\n                        event.presentationTime = currentMpdEvent.presentationTime;\r\n                        const presentationTimeOffset = eventStream.presentationTimeOffset ? eventStream.presentationTimeOffset / eventStream.timescale : 0;\r\n                        event.calculatedPresentationTime = event.presentationTime / eventStream.timescale + period.start - presentationTimeOffset;\r\n                    }\r\n                    if (currentMpdEvent.hasOwnProperty(DashConstants.DURATION)) {\r\n                        event.duration = currentMpdEvent.duration / eventStream.timescale;\r\n                    }\r\n                    if (currentMpdEvent.hasOwnProperty(DashConstants.ID)) {\r\n                        event.id = currentMpdEvent.id;\r\n                    }\r\n\r\n                    if (currentMpdEvent.Signal && currentMpdEvent.Signal.Binary) {\r\n                        // toString is used to manage both regular and namespaced tags\r\n                        event.messageData = BASE64.decodeArray(currentMpdEvent.Signal.Binary.toString());\r\n                    } else {\r\n                        // From Cor.1: 'NOTE: this attribute is an alternative\r\n                        // to specifying a complete XML element(s) in the Event.\r\n                        // It is useful when an event leans itself to a compact\r\n                        // string representation'.\r\n                        event.messageData =\r\n                            currentMpdEvent.messageData ||\r\n                            currentMpdEvent.__text;\r\n                    }\r\n\r\n                    events.push(event);\r\n                }\r\n            }\r\n        }\r\n\r\n        return events;\r\n    }\r\n\r\n    function getEventStreams(inbandStreams, representation) {\r\n        const eventStreams = [];\r\n        let i;\r\n\r\n        if (!inbandStreams) return eventStreams;\r\n\r\n        for (i = 0; i < inbandStreams.length; i++) {\r\n            const eventStream = new EventStream();\r\n            eventStream.timescale = 1;\r\n            eventStream.representation = representation;\r\n\r\n            if (inbandStreams[i].hasOwnProperty(Constants.SCHEME_ID_URI)) {\r\n                eventStream.schemeIdUri = inbandStreams[i].schemeIdUri;\r\n            } else {\r\n                throw new Error('Invalid EventStream. SchemeIdUri has to be set');\r\n            }\r\n            if (inbandStreams[i].hasOwnProperty(DashConstants.TIMESCALE)) {\r\n                eventStream.timescale = inbandStreams[i].timescale;\r\n            }\r\n            if (inbandStreams[i].hasOwnProperty(DashConstants.VALUE)) {\r\n                eventStream.value = inbandStreams[i].value;\r\n            }\r\n            eventStreams.push(eventStream);\r\n        }\r\n\r\n        return eventStreams;\r\n    }\r\n\r\n    function getEventStreamForAdaptationSet(manifest, adaptation) {\r\n        let inbandStreams,\r\n            periodArray,\r\n            adaptationArray;\r\n\r\n        if (manifest && manifest.Period_asArray && adaptation && adaptation.period && isInteger(adaptation.period.index)) {\r\n            periodArray = manifest.Period_asArray[adaptation.period.index];\r\n            if (periodArray && periodArray.AdaptationSet_asArray && isInteger(adaptation.index)) {\r\n                adaptationArray = periodArray.AdaptationSet_asArray[adaptation.index];\r\n                if (adaptationArray) {\r\n                    inbandStreams = adaptationArray.InbandEventStream_asArray;\r\n                }\r\n            }\r\n        }\r\n\r\n        return getEventStreams(inbandStreams, null);\r\n    }\r\n\r\n    function getEventStreamForRepresentation(manifest, representation) {\r\n        let inbandStreams,\r\n            periodArray,\r\n            adaptationArray,\r\n            representationArray;\r\n\r\n        if (manifest && manifest.Period_asArray && representation && representation.adaptation && representation.adaptation.period && isInteger(representation.adaptation.period.index)) {\r\n            periodArray = manifest.Period_asArray[representation.adaptation.period.index];\r\n            if (periodArray && periodArray.AdaptationSet_asArray && isInteger(representation.adaptation.index)) {\r\n                adaptationArray = periodArray.AdaptationSet_asArray[representation.adaptation.index];\r\n                if (adaptationArray && adaptationArray.Representation_asArray && isInteger(representation.index)) {\r\n                    representationArray = adaptationArray.Representation_asArray[representation.index];\r\n                    if (representationArray) {\r\n                        inbandStreams = representationArray.InbandEventStream_asArray;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return getEventStreams(inbandStreams, representation);\r\n    }\r\n\r\n    function getUTCTimingSources(manifest) {\r\n        const isDynamic = getIsDynamic(manifest);\r\n        const hasAST = manifest ? manifest.hasOwnProperty(DashConstants.AVAILABILITY_START_TIME) : false;\r\n        const utcTimingsArray = manifest ? manifest.UTCTiming_asArray : null;\r\n        const utcTimingEntries = [];\r\n\r\n        // do not bother synchronizing the clock unless MPD is live,\r\n        // or it is static and has availabilityStartTime attribute\r\n        if ((isDynamic || hasAST)) {\r\n            if (utcTimingsArray) {\r\n                // the order is important here - 23009-1 states that the order\r\n                // in the manifest \"indicates relative preference, first having\r\n                // the highest, and the last the lowest priority\".\r\n                utcTimingsArray.forEach(function (utcTiming) {\r\n                    const entry = new UTCTiming();\r\n\r\n                    if (utcTiming.hasOwnProperty(Constants.SCHEME_ID_URI)) {\r\n                        entry.schemeIdUri = utcTiming.schemeIdUri;\r\n                    } else {\r\n                        // entries of type DescriptorType with no schemeIdUri\r\n                        // are meaningless. let's just ignore this entry and\r\n                        // move on.\r\n                        return;\r\n                    }\r\n\r\n                    // this is (incorrectly) interpreted as a number - schema\r\n                    // defines it as a string\r\n                    if (utcTiming.hasOwnProperty(DashConstants.VALUE)) {\r\n                        entry.value = utcTiming.value.toString();\r\n                    } else {\r\n                        // without a value, there's not a lot we can do with\r\n                        // this entry. let's just ignore this one and move on\r\n                        return;\r\n                    }\r\n\r\n                    // we're not interested in the optional id or any other\r\n                    // attributes which might be attached to the entry\r\n\r\n                    utcTimingEntries.push(entry);\r\n                });\r\n            }\r\n        }\r\n\r\n        return utcTimingEntries;\r\n    }\r\n\r\n    function getBaseURLsFromElement(node) {\r\n        const baseUrls = [];\r\n        // if node.BaseURL_asArray and node.baseUri are undefined entries\r\n        // will be [undefined] which entries.some will just skip\r\n        const entries = node.BaseURL_asArray || [node.baseUri];\r\n        let earlyReturn = false;\r\n\r\n        entries.some(entry => {\r\n            if (entry) {\r\n                const baseUrl = new BaseURL();\r\n                let text = entry.__text || entry;\r\n\r\n                if (urlUtils.isRelative(text)) {\r\n                    // it doesn't really make sense to have relative and\r\n                    // absolute URLs at the same level, or multiple\r\n                    // relative URLs at the same level, so assume we are\r\n                    // done from this level of the MPD\r\n                    earlyReturn = true;\r\n\r\n                    // deal with the specific case where the MPD@BaseURL\r\n                    // is specified and is relative. when no MPD@BaseURL\r\n                    // entries exist, that case is handled by the\r\n                    // [node.baseUri] in the entries definition.\r\n                    if (node.baseUri) {\r\n                        text = urlUtils.resolve(text, node.baseUri);\r\n                    }\r\n                }\r\n\r\n                baseUrl.url = text;\r\n\r\n                // serviceLocation is optional, but we need it in order\r\n                // to blacklist correctly. if it's not available, use\r\n                // anything unique since there's no relationship to any\r\n                // other BaseURL and, in theory, the url should be\r\n                // unique so use this instead.\r\n                if (entry.hasOwnProperty(DashConstants.SERVICE_LOCATION) &&\r\n                    entry.serviceLocation.length) {\r\n                    baseUrl.serviceLocation = entry.serviceLocation;\r\n                } else {\r\n                    baseUrl.serviceLocation = text;\r\n                }\r\n\r\n                if (entry.hasOwnProperty(DashConstants.DVB_PRIORITY)) {\r\n                    baseUrl.dvb_priority = entry[DashConstants.DVB_PRIORITY];\r\n                }\r\n\r\n                if (entry.hasOwnProperty(DashConstants.DVB_WEIGHT)) {\r\n                    baseUrl.dvb_weight = entry[DashConstants.DVB_WEIGHT];\r\n                }\r\n\r\n                if (entry.hasOwnProperty(DashConstants.AVAILABILITY_TIME_OFFSET)) {\r\n                    baseUrl.availabilityTimeOffset = entry[DashConstants.AVAILABILITY_TIME_OFFSET];\r\n                }\r\n\r\n                if (entry.hasOwnProperty(DashConstants.AVAILABILITY_TIME_COMPLETE)) {\r\n                    baseUrl.availabilityTimeComplete = entry[DashConstants.AVAILABILITY_TIME_COMPLETE] !== 'false';\r\n                }\r\n                /* NOTE: byteRange currently unused\r\n                 */\r\n\r\n                baseUrls.push(baseUrl);\r\n\r\n                return earlyReturn;\r\n            }\r\n        });\r\n\r\n        return baseUrls;\r\n    }\r\n\r\n    function getLocation(manifest) {\r\n        if (manifest && manifest.hasOwnProperty(Constants.LOCATION)) {\r\n            // for now, do not support multiple Locations -\r\n            // just set Location to the first Location.\r\n            manifest.Location = manifest.Location_asArray[0];\r\n\r\n            return manifest.Location;\r\n        }\r\n\r\n        // may well be undefined\r\n        return undefined;\r\n    }\r\n\r\n    function getPatchLocation(manifest) {\r\n        if (manifest && manifest.hasOwnProperty(DashConstants.PATCH_LOCATION)) {\r\n            // only include support for single patch location currently\r\n            manifest.PatchLocation = manifest.PatchLocation_asArray[0];\r\n\r\n            return manifest.PatchLocation;\r\n        }\r\n\r\n        // no patch location provided\r\n        return undefined;\r\n    }\r\n\r\n    function getSuggestedPresentationDelay(mpd) {\r\n        return mpd && mpd.hasOwnProperty(DashConstants.SUGGESTED_PRESENTATION_DELAY) ? mpd.suggestedPresentationDelay : null;\r\n    }\r\n\r\n    function getAvailabilityStartTime(mpd) {\r\n        return mpd && mpd.hasOwnProperty(DashConstants.AVAILABILITY_START_TIME) && mpd.availabilityStartTime !== null ? mpd.availabilityStartTime.getTime() : null;\r\n    }\r\n\r\n    function getServiceDescriptions(manifest) {\r\n        const serviceDescriptions = [];\r\n        if (manifest && manifest.hasOwnProperty(DashConstants.SERVICE_DESCRIPTION)) {\r\n            for (const sd of manifest.ServiceDescription_asArray) {\r\n                // Convert each of the properties defined in\r\n                let id, schemeIdUri, latency, playbackRate;\r\n                for (const prop in sd) {\r\n                    if (sd.hasOwnProperty(prop)) {\r\n                        if (prop === DashConstants.ID) {\r\n                            id = sd[prop];\r\n                        } else if (prop === DashConstants.SERVICE_DESCRIPTION_SCOPE) {\r\n                            schemeIdUri = sd[prop].schemeIdUri;\r\n                        } else if (prop === DashConstants.SERVICE_DESCRIPTION_LATENCY) {\r\n                            latency = {\r\n                                target: sd[prop].target,\r\n                                max: sd[prop].max,\r\n                                min: sd[prop].min\r\n                            };\r\n                        } else if (prop === DashConstants.SERVICE_DESCRIPTION_PLAYBACK_RATE) {\r\n                            playbackRate = {\r\n                                max: sd[prop].max,\r\n                                min: sd[prop].min\r\n                            };\r\n                        }\r\n                    }\r\n                }\r\n                // we have a ServiceDescription for low latency. Add it if it really has parameters defined\r\n                if (schemeIdUri === Constants.SERVICE_DESCRIPTION_LL_SCHEME && (latency || playbackRate)) {\r\n                    serviceDescriptions.push({\r\n                        id,\r\n                        schemeIdUri,\r\n                        latency,\r\n                        playbackRate\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        return serviceDescriptions;\r\n    }\r\n\r\n    function getSupplementalPropperties(adaptation) {\r\n        const supplementalProperties = {};\r\n\r\n        if (adaptation && adaptation.hasOwnProperty(DashConstants.SUPPLEMENTAL_PROPERTY)) {\r\n            for (const sp of adaptation.SupplementalProperty_asArray) {\r\n                if (sp.hasOwnProperty(Constants.SCHEME_ID_URI) && sp.hasOwnProperty(DashConstants.VALUE)) {\r\n                    supplementalProperties[sp[Constants.SCHEME_ID_URI]] = sp[DashConstants.VALUE];\r\n                }\r\n            }\r\n        }\r\n        return supplementalProperties;\r\n    }\r\n\r\n    function setConfig(config) {\r\n        if (!config) return;\r\n\r\n        if (config.errHandler) {\r\n            errHandler = config.errHandler;\r\n        }\r\n\r\n        if (config.BASE64) {\r\n            BASE64 = config.BASE64;\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        getIsTypeOf: getIsTypeOf,\r\n        getIsTextTrack: getIsTextTrack,\r\n        getLanguageForAdaptation: getLanguageForAdaptation,\r\n        getViewpointForAdaptation: getViewpointForAdaptation,\r\n        getRolesForAdaptation: getRolesForAdaptation,\r\n        getAccessibilityForAdaptation: getAccessibilityForAdaptation,\r\n        getAudioChannelConfigurationForAdaptation: getAudioChannelConfigurationForAdaptation,\r\n        getAudioChannelConfigurationForRepresentation: getAudioChannelConfigurationForRepresentation,\r\n        getAdaptationForIndex: getAdaptationForIndex,\r\n        getIndexForAdaptation: getIndexForAdaptation,\r\n        getAdaptationForId: getAdaptationForId,\r\n        getAdaptationsForType: getAdaptationsForType,\r\n        getRealPeriods,\r\n        getRealPeriodForIndex,\r\n        getCodec: getCodec,\r\n        getMimeType: getMimeType,\r\n        getKID: getKID,\r\n        getLabelsForAdaptation: getLabelsForAdaptation,\r\n        getContentProtectionData: getContentProtectionData,\r\n        getIsDynamic: getIsDynamic,\r\n        getId: getId,\r\n        hasProfile: hasProfile,\r\n        getDuration: getDuration,\r\n        getBandwidth: getBandwidth,\r\n        getManifestUpdatePeriod: getManifestUpdatePeriod,\r\n        getPublishTime: getPublishTime,\r\n        getRepresentationCount: getRepresentationCount,\r\n        getBitrateListForAdaptation: getBitrateListForAdaptation,\r\n        getRepresentationFor: getRepresentationFor,\r\n        getRepresentationsForAdaptation: getRepresentationsForAdaptation,\r\n        getAdaptationsForPeriod: getAdaptationsForPeriod,\r\n        getRegularPeriods: getRegularPeriods,\r\n        getMpd: getMpd,\r\n        getEventsForPeriod: getEventsForPeriod,\r\n        getEssentialPropertiesForRepresentation,\r\n        getEventStreamForAdaptationSet: getEventStreamForAdaptationSet,\r\n        getEventStreamForRepresentation: getEventStreamForRepresentation,\r\n        getUTCTimingSources: getUTCTimingSources,\r\n        getBaseURLsFromElement: getBaseURLsFromElement,\r\n        getRepresentationSortFunction: getRepresentationSortFunction,\r\n        getLocation: getLocation,\r\n        getPatchLocation: getPatchLocation,\r\n        getSuggestedPresentationDelay: getSuggestedPresentationDelay,\r\n        getAvailabilityStartTime: getAvailabilityStartTime,\r\n        getServiceDescriptions: getServiceDescriptions,\r\n        getSupplementalPropperties: getSupplementalPropperties,\r\n        setConfig: setConfig\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nDashManifestModel.__dashjs_factory_name = 'DashManifestModel';\r\nexport default FactoryMaker.getSingletonFactory(DashManifestModel);\r\n"]}