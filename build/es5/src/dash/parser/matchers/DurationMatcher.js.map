{"version":3,"sources":["../../../../../../src/dash/parser/matchers/DurationMatcher.js"],"names":["durationRegex","SECONDS_IN_YEAR","SECONDS_IN_MONTH","SECONDS_IN_DAY","SECONDS_IN_HOUR","SECONDS_IN_MIN","DurationMatcher","attributeList","DashConstants","MIN_BUFFER_TIME","MEDIA_PRESENTATION_DURATION","MINIMUM_UPDATE_PERIOD","TIMESHIFT_BUFFER_DEPTH","MAX_SEGMENT_DURATION","MAX_SUBSEGMENT_DURATION","SUGGESTED_PRESENTATION_DELAY","START","Constants","START_TIME","DURATION","len","length","i","attr","nodeName","test","value","match","exec","str","result","parseFloat","undefined","BaseMatcher"],"mappings":"sEAiCA,2C,wDACA,iE,mDACA,4D,47BAnCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA8BA;;GAOA,GAAMA,eAAgB,oFAAtB,CAEA,GAAMC,iBAAkB,IAAM,EAAN,CAAW,EAAX,CAAgB,EAAxC,CACA,GAAMC,kBAAmB,GAAK,EAAL,CAAU,EAAV,CAAe,EAAxC,CACA,GAAMC,gBAAiB,GAAK,EAAL,CAAU,EAAjC,CACA,GAAMC,iBAAkB,GAAK,EAA7B,CACA,GAAMC,gBAAiB,EAAvB,C,GAEMC,gB,gEACF,0BAAc,4JAEN,cAAQ,CACJ,GAAMC,eAAgB,CAClBC,wBAAcC,eADI,CACaD,wBAAcE,2BAD3B,CAElBF,wBAAcG,qBAFI,CAEmBH,wBAAcI,sBAFjC,CAEyDJ,wBAAcK,oBAFvE,CAGlBL,wBAAcM,uBAHI,CAGqBN,wBAAcO,4BAHnC,CAGiEP,wBAAcQ,KAH/E,CAIlBC,oBAAUC,UAJQ,CAIIV,wBAAcW,QAJlB,CAAtB,CAMA,GAAMC,KAAMb,cAAcc,MAA1B,CAEA,IAAK,GAAIC,GAAI,CAAb,CAAgBA,EAAIF,GAApB,CAAyBE,GAAzB,CAA8B,CAC1B,GAAIC,KAAKC,QAAL,GAAkBjB,cAAce,CAAd,CAAtB,CAAwC,CACpC,MAAOtB,eAAcyB,IAAd,CAAmBF,KAAKG,KAAxB,CAAP,CACH,CACJ,CAED,MAAO,MAAP,CACH,CAlBK,CAmBN,aAAO,CACH;AACA,GAAMC,OAAQ3B,cAAc4B,IAAd,CAAmBC,GAAnB,CAAd,CACA,GAAIC,QAAUC,WAAWJ,MAAM,CAAN,GAAY,CAAvB,EAA4B1B,eAA5B,CACV8B,WAAWJ,MAAM,CAAN,GAAY,CAAvB,EAA4BzB,gBADlB,CAEV6B,WAAWJ,MAAM,CAAN,GAAY,CAAvB,EAA4BxB,cAFlB,CAGV4B,WAAWJ,MAAM,CAAN,GAAY,CAAvB,EAA4BvB,eAHlB,CAIV2B,WAAWJ,MAAM,EAAN,GAAa,CAAxB,EAA6BtB,cAJnB,CAKV0B,WAAWJ,MAAM,EAAN,GAAa,CAAxB,CALJ,CAOA,GAAIA,MAAM,CAAN,IAAaK,SAAjB,CAA4B,CACxBF,OAAS,CAACA,MAAV,CACH,CAED,MAAOA,OAAP,CACH,CAlCK,GAoCb,C,yBArCyBG,qB,kBAwCf3B,e","file":"DurationMatcher.js","sourcesContent":["/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc matches and converts xs:duration to seconds\r\n */\r\nimport BaseMatcher from './BaseMatcher';\r\nimport Constants from '../../../streaming/constants/Constants';\r\nimport DashConstants from '../../constants/DashConstants';\r\n\r\nconst durationRegex = /^([-])?P(([\\d.]*)Y)?(([\\d.]*)M)?(([\\d.]*)D)?T?(([\\d.]*)H)?(([\\d.]*)M)?(([\\d.]*)S)?/;\r\n\r\nconst SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\r\nconst SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\r\nconst SECONDS_IN_DAY = 24 * 60 * 60;\r\nconst SECONDS_IN_HOUR = 60 * 60;\r\nconst SECONDS_IN_MIN = 60;\r\n\r\nclass DurationMatcher extends BaseMatcher {\r\n    constructor() {\r\n        super(\r\n            attr => {\r\n                const attributeList = [\r\n                    DashConstants.MIN_BUFFER_TIME, DashConstants.MEDIA_PRESENTATION_DURATION,\r\n                    DashConstants.MINIMUM_UPDATE_PERIOD, DashConstants.TIMESHIFT_BUFFER_DEPTH, DashConstants.MAX_SEGMENT_DURATION,\r\n                    DashConstants.MAX_SUBSEGMENT_DURATION, DashConstants.SUGGESTED_PRESENTATION_DELAY, DashConstants.START,\r\n                    Constants.START_TIME, DashConstants.DURATION\r\n                ];\r\n                const len = attributeList.length;\r\n\r\n                for (let i = 0; i < len; i++) {\r\n                    if (attr.nodeName === attributeList[i]) {\r\n                        return durationRegex.test(attr.value);\r\n                    }\r\n                }\r\n\r\n                return false;\r\n            },\r\n            str => {\r\n                //str = \"P10Y10M10DT10H10M10.1S\";\r\n                const match = durationRegex.exec(str);\r\n                let result = (parseFloat(match[3] || 0) * SECONDS_IN_YEAR +\r\n                    parseFloat(match[5] || 0) * SECONDS_IN_MONTH +\r\n                    parseFloat(match[7] || 0) * SECONDS_IN_DAY +\r\n                    parseFloat(match[9] || 0) * SECONDS_IN_HOUR +\r\n                    parseFloat(match[11] || 0) * SECONDS_IN_MIN +\r\n                    parseFloat(match[13] || 0));\r\n\r\n                if (match[1] !== undefined) {\r\n                    result = -result;\r\n                }\r\n\r\n                return result;\r\n            }\r\n        );\r\n    }\r\n}\r\n\r\nexport default DurationMatcher;\r\n"]}