{"version":3,"sources":["../../../../../../src/dash/parser/maps/MapNode.js"],"names":["MapNode","name","properties","children","_name","_properties","_children","Array","isArray","forEach","push","CommonProperty","p"],"mappings":"okBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA8BA;;GAGA,gD,oSAEMA,Q,YACF,iBAAYC,IAAZ,CAAkBC,UAAlB,CAA8BC,QAA9B,CAAwC,8CACpC,KAAKC,KAAL,CAAaH,MAAQ,EAArB,CACA,KAAKI,WAAL,CAAmB,EAAnB,CACA,KAAKC,SAAL,CAAiBH,UAAY,EAA7B,CAEA,GAAII,MAAMC,OAAN,CAAcN,UAAd,CAAJ,CAA+B,CAC3BA,WAAWO,OAAX,CAAmB,WAAK,CACpB,MAAKJ,WAAL,CAAiBK,IAAjB,CAAsB,GAAIC,yBAAJ,CAAmBC,CAAnB,CAAtB,EACH,CAFD,EAGH,CACJ,C,oDAEU,CACP,MAAO,MAAKR,KAAZ,CACH,C,oCAEc,CACX,MAAO,MAAKE,SAAZ,CACH,C,sCAEgB,CACb,MAAO,MAAKD,WAAZ,CACH,C,uCAGUL,O","file":"MapNode.js","sourcesContent":["/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc a node at some level in a ValueMap\r\n */\r\nimport CommonProperty from './CommonProperty';\r\n\r\nclass MapNode {\r\n    constructor(name, properties, children) {\r\n        this._name = name || '';\r\n        this._properties = [];\r\n        this._children = children || [];\r\n\r\n        if (Array.isArray(properties)) {\r\n            properties.forEach(p => {\r\n                this._properties.push(new CommonProperty(p));\r\n            });\r\n        }\r\n    }\r\n\r\n    get name() {\r\n        return this._name;\r\n    }\r\n\r\n    get children() {\r\n        return this._children;\r\n    }\r\n\r\n    get properties() {\r\n        return this._properties;\r\n    }\r\n}\r\n\r\nexport default MapNode;\r\n"]}