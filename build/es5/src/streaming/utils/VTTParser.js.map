{"version":3,"sources":["../../../../../src/streaming/utils/VTTParser.js"],"names":["WEBVTT","VTTParser","context","instance","logger","regExNewLine","regExToken","regExWhiteSpace","regExWhiteSpaceWordBoundary","setup","getInstance","getLogger","parse","data","captionArray","len","lastStartTime","split","length","i","item","match","attributes","parseItemAttributes","cuePoints","styles","text","getSublines","startTime","convertCuePointTimes","replace","endTime","isNaN","push","start","end","error","time","timeArray","parseInt","parseFloat","vttCuePoints","arr","shift","getCaptionStyles","styleObject","forEach","element","val","search","align","line","position","size","idx","subline","lineData","lineCount","j","__dashjs_factory_name","FactoryMaker","getSingletonFactory"],"mappings":"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","file":"VTTParser.js","sourcesContent":["/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\nimport Debug from '../../core/Debug';\r\n\r\nconst WEBVTT = 'WEBVTT';\r\n\r\nfunction VTTParser() {\r\n    const context = this.context;\r\n\r\n    let instance,\r\n        logger,\r\n        regExNewLine,\r\n        regExToken,\r\n        regExWhiteSpace,\r\n        regExWhiteSpaceWordBoundary;\r\n\r\n    function setup() {\r\n        logger = Debug(context).getInstance().getLogger(instance);\r\n        regExNewLine = /(?:\\r\\n|\\r|\\n)/gm;\r\n        regExToken = /-->/;\r\n        regExWhiteSpace = /(^[\\s]+|[\\s]+$)/g;\r\n        regExWhiteSpaceWordBoundary = /\\s\\b/g;\r\n    }\r\n\r\n    function parse(data) {\r\n        const captionArray = [];\r\n        let len,\r\n            lastStartTime;\r\n\r\n        if (!data) {\r\n            return captionArray;\r\n        }\r\n\r\n        data = data.split( regExNewLine );\r\n        len = data.length;\r\n        lastStartTime = -1;\r\n\r\n        for (let i = 0 ; i < len; i++) {\r\n            let item = data[i];\r\n\r\n            if (item.length > 0 && item !== WEBVTT) {\r\n                if (item.match(regExToken)) {\r\n                    const attributes = parseItemAttributes(item);\r\n                    const cuePoints = attributes.cuePoints;\r\n                    const styles = attributes.styles;\r\n                    const text = getSublines(data, i + 1);\r\n                    const startTime = convertCuePointTimes(cuePoints[0].replace(regExWhiteSpace, ''));\r\n                    const endTime = convertCuePointTimes(cuePoints[1].replace(regExWhiteSpace, ''));\r\n\r\n                    if ((!isNaN(startTime) && !isNaN(endTime)) && startTime >= lastStartTime && endTime > startTime) {\r\n                        if (text !== '') {\r\n                            lastStartTime = startTime;\r\n                            //TODO Make VO external so other parsers can use.\r\n                            captionArray.push({\r\n                                start: startTime,\r\n                                end: endTime,\r\n                                data: text,\r\n                                styles: styles\r\n                            });\r\n                        }\r\n                        else {\r\n                            logger.error('Skipping cue due to empty/malformed cue text');\r\n                        }\r\n                    }\r\n                    else {\r\n                        logger.error('Skipping cue due to incorrect cue timing');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return captionArray;\r\n    }\r\n\r\n    function convertCuePointTimes(time) {\r\n        const timeArray = time.split(':');\r\n        const len = timeArray.length - 1;\r\n\r\n        time = parseInt( timeArray[len - 1], 10 ) * 60 + parseFloat( timeArray[len]);\r\n\r\n        if ( len === 2 ) {\r\n            time += parseInt( timeArray[0], 10 ) * 3600;\r\n        }\r\n\r\n        return time;\r\n    }\r\n\r\n    function parseItemAttributes(data) {\r\n        const vttCuePoints = data.split(regExToken);\r\n        const arr = vttCuePoints[1].split(regExWhiteSpaceWordBoundary);\r\n        arr.shift(); //remove first array index it is empty...\r\n        vttCuePoints[1] = arr[0];\r\n        arr.shift();\r\n        return {cuePoints: vttCuePoints, styles: getCaptionStyles(arr)};\r\n    }\r\n\r\n    function getCaptionStyles(arr) {\r\n        const styleObject = {};\r\n        arr.forEach(function (element) {\r\n            if (element.split(/:/).length > 1) {\r\n                let val = element.split(/:/)[1];\r\n                if (val && val.search(/%/) != -1) {\r\n                    val = parseInt(val.replace(/%/, ''), 10);\r\n                }\r\n                if (element.match(/align/) || element.match(/A/)) {\r\n                    styleObject.align = val;\r\n                }\r\n                if (element.match(/line/) || element.match(/L/) ) {\r\n                    styleObject.line = val;\r\n                }\r\n                if (element.match(/position/) || element.match(/P/) ) {\r\n                    styleObject.position = val;\r\n                }\r\n                if (element.match(/size/) || element.match(/S/)) {\r\n                    styleObject.size = val;\r\n                }\r\n            }\r\n        });\r\n\r\n        return styleObject;\r\n    }\r\n\r\n    /*\r\n    * VTT can have multiple lines to display per cuepoint.\r\n    */\r\n    function getSublines(data, idx) {\r\n        let i = idx;\r\n\r\n        let subline = '';\r\n        let lineData = '';\r\n        let lineCount;\r\n\r\n        while (data[i] !== '' && i < data.length) {\r\n            i++;\r\n        }\r\n\r\n        lineCount = i - idx;\r\n        if (lineCount > 1) {\r\n            for (let j = 0; j < lineCount; j++) {\r\n                lineData = data[(idx + j)];\r\n                if (!lineData.match(regExToken)) {\r\n                    subline += lineData;\r\n                    if (j !== lineCount - 1) {\r\n                        subline += '\\n';\r\n                    }\r\n                }\r\n                else {\r\n                    // caption text should not have '-->' in it\r\n                    subline = '';\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            lineData = data[idx];\r\n            if (!lineData.match(regExToken))\r\n                subline = lineData;\r\n        }\r\n        return subline;\r\n    }\r\n\r\n    instance = {\r\n        parse: parse\r\n    };\r\n\r\n    setup();\r\n    return instance;\r\n}\r\nVTTParser.__dashjs_factory_name = 'VTTParser';\r\nexport default FactoryMaker.getSingletonFactory(VTTParser);\r\n"]}