{"version":3,"sources":["../../../../../src/streaming/utils/DefaultURLUtils.js"],"names":["DefaultURLUtils","resolveFunction","schemeRegex","httpUrlRegex","httpsUrlRegex","originRegex","nativeURLResolver","url","baseUrl","window","URL","toString","e","dumbURLResolver","baseUrlParseFunc","parseBaseUrl","isRelative","isPathAbsolute","parseOrigin","isSchemeRelative","parseScheme","base","joinChar","charAt","length","join","setup","u","slashIndex","indexOf","lastSlashIndex","lastIndexOf","substring","matches","match","removeHostname","urlParts","exec","test","isHTTPURL","isHTTPS","resolve","instance","__dashjs_factory_name","FactoryMaker","getSingletonFactory"],"mappings":"sEA+BA,qD,4IAEA;;;;;;;GAQA,QAASA,gBAAT,EAA2B,CAEvB,GAAIC,uBAAJ,CAEA,GAAMC,aAAc,wBAApB,CACA,GAAMC,cAAe,eAArB,CACA,GAAMC,eAAgB,cAAtB,CACA,GAAMC,aAAc,uCAApB,CAEA;;;;;;;;;;OAWA,GAAMC,mBAAoB,QAApBA,kBAAoB,CAACC,GAAD,CAAMC,OAAN,CAAkB,CACxC,GAAI,CACA,MAAO,IAAIC,QAAOC,GAAX,CAAeH,GAAf,CAAoBC,OAApB,EAA6BG,QAA7B,EAAP,CACH,CAAC,MAAOC,CAAP,CAAU,CACR,MAAOL,IAAP,CACH,CACJ,CAND,CAQA;;;;;;;;;;;;OAaA,GAAMM,iBAAkB,QAAlBA,gBAAkB,CAACN,GAAD,CAAMC,OAAN,CAAkB,CACtC,GAAIM,kBAAmBC,YAAvB,CAEA,GAAI,CAACP,OAAL,CAAc,CACV,MAAOD,IAAP,CACH,CAED,GAAI,CAACS,WAAWT,GAAX,CAAL,CAAsB,CAClB,MAAOA,IAAP,CACH,CAED,GAAIU,eAAeV,GAAf,CAAJ,CAAyB,CACrBO,iBAAmBI,WAAnB,CACH,CAED,GAAIC,iBAAiBZ,GAAjB,CAAJ,CAA2B,CACvBO,iBAAmBM,WAAnB,CACH,CAED,GAAMC,MAAOP,iBAAiBN,OAAjB,CAAb,CACA,GAAMc,UACAD,KAAKE,MAAL,CAAYF,KAAKG,MAAL,CAAc,CAA1B,IAAiC,GAAjC,EACAjB,IAAIgB,MAAJ,CAAW,CAAX,IAAkB,GADlB,CAEA,GAFA,CAEM,EAHZ,CAKA,MAAO,CAACF,IAAD,CAAOd,GAAP,EAAYkB,IAAZ,CAAiBH,QAAjB,CAAP,CACH,CA1BD,CA4BA,QAASI,MAAT,EAAiB,CACb,GAAI,CACA,GAAMC,GAAI,GAAIlB,QAAOC,GAAX,CAAe,GAAf,CAAoB,UAApB,CAAV,CAA2C;AAC3CT,gBAAkBK,iBAAlB,CACH,CAAC,MAAOM,CAAP,CAAU,CACR;AACH,CALD,OAKU,CACNX,gBAAkBA,iBAAmBY,eAArC,CACH,CACJ,CAED;;;;;;OAOA,QAASE,aAAT,CAAsBR,GAAtB,CAA2B,CACvB,GAAMqB,YAAarB,IAAIsB,OAAJ,CAAY,GAAZ,CAAnB,CACA,GAAMC,gBAAiBvB,IAAIwB,WAAJ,CAAgB,GAAhB,CAAvB,CAEA,GAAIH,aAAe,CAAC,CAApB,CAAuB,CACnB;AACA,GAAIE,iBAAmBF,WAAa,CAApC,CAAuC,CACnC,MAAOrB,IAAP,CACH,CAED,GAAIA,IAAIsB,OAAJ,CAAY,GAAZ,IAAqB,CAAC,CAA1B,CAA6B,CACzBtB,IAAMA,IAAIyB,SAAJ,CAAc,CAAd,CAAiBzB,IAAIsB,OAAJ,CAAY,GAAZ,CAAjB,CAAN,CACH,CAED,MAAOtB,KAAIyB,SAAJ,CAAc,CAAd,CAAiBF,eAAiB,CAAlC,CAAP,CACH,CAED,MAAO,EAAP,CACH,CAED;;;;;;;OAQA,QAASZ,YAAT,CAAqBX,GAArB,CAA0B,CACtB,GAAM0B,SAAU1B,IAAI2B,KAAJ,CAAU7B,WAAV,CAAhB,CAEA,GAAI4B,OAAJ,CAAa,CACT,MAAOA,SAAQ,CAAR,CAAP,CACH,CAED,MAAO,EAAP,CACH,CAED;;;;;;;OAQA,QAASE,eAAT,CAAwB5B,GAAxB,CAA6B,CACzB,GAAI6B,UAAW,+BAA+BC,IAA/B,CAAoC9B,GAApC,CAAf,CAAyD;AACzD,MAAO6B,UAAS,CAAT,EAAYJ,SAAZ,CAAsB,CAAtB,CAAP,CACH,CAED;;;;;;OAOA,QAASZ,YAAT,CAAqBb,GAArB,CAA0B,CACtB,GAAM0B,SAAU1B,IAAI2B,KAAJ,CAAUhC,WAAV,CAAhB,CAEA,GAAI+B,OAAJ,CAAa,CACT,MAAOA,SAAQ,CAAR,CAAP,CACH,CAED,MAAO,EAAP,CACH,CAED;;;;;;OAOA,QAASjB,WAAT,CAAoBT,GAApB,CAAyB,CACrB,MAAO,CAACL,YAAYoC,IAAZ,CAAiB/B,GAAjB,CAAR,CACH,CAED;;;;;;OAOA,QAASU,eAAT,CAAwBV,GAAxB,CAA6B,CACzB,MAAOS,YAAWT,GAAX,GAAmBA,IAAIgB,MAAJ,CAAW,CAAX,IAAkB,GAA5C,CACH,CAED;;;;;;OAOA,QAASJ,iBAAT,CAA0BZ,GAA1B,CAA+B,CAC3B,MAAOA,KAAIsB,OAAJ,CAAY,IAAZ,IAAsB,CAA7B,CACH,CAED;;;;;;;OAQA,QAASU,UAAT,CAAmBhC,GAAnB,CAAwB,CACpB,MAAOJ,cAAamC,IAAb,CAAkB/B,GAAlB,CAAP,CACH,CAED;;;;;;OAOA,QAASiC,QAAT,CAAiBjC,GAAjB,CAAsB,CAClB,MAAOH,eAAckC,IAAd,CAAmB/B,GAAnB,CAAP,CACH,CAED;;;;;;;OAQA,QAASkC,QAAT,CAAiBlC,GAAjB,CAAsBC,OAAtB,CAA+B,CAC3B,MAAOP,iBAAgBM,GAAhB,CAAqBC,OAArB,CAAP,CACH,CAEDkB,QAEA,GAAMgB,UAAW,CACb3B,aAAoBA,YADP,CAEbG,YAAoBA,WAFP,CAGbE,YAAoBA,WAHP,CAIbJ,WAAoBA,UAJP,CAKbC,eAAoBA,cALP,CAMbE,iBAAoBA,gBANP,CAOboB,UAAoBA,SAPP,CAQbC,QAAoBA,OARP,CASbL,eAAoBA,cATP,CAUbM,QAAoBA,OAVP,CAAjB,CAaA,MAAOC,SAAP,CACH,CAxRD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA0RA1C,gBAAgB2C,qBAAhB,CAAwC,iBAAxC,C,gBACeC,uBAAaC,mBAAb,CAAiC7C,eAAjC,C","file":"DefaultURLUtils.js","sourcesContent":["/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\n\r\n/**\r\n * @module DefaultURLUtils\r\n * @description Provides utility functions for operating on URLs.\r\n * Initially this is simply a method to determine the Base URL of a URL, but\r\n * should probably include other things provided all over the place such as\r\n * determining whether a URL is relative/absolute, resolving two paths etc.\r\n * @ignore\r\n */\r\nfunction DefaultURLUtils() {\r\n\r\n    let resolveFunction;\r\n\r\n    const schemeRegex = /^[a-z][a-z0-9+\\-_.]*:/i;\r\n    const httpUrlRegex = /^https?:\\/\\//i;\r\n    const httpsUrlRegex = /^https:\\/\\//i;\r\n    const originRegex = /^([a-z][a-z0-9+\\-_.]*:\\/\\/[^\\/]+)\\/?/i;\r\n\r\n    /**\r\n     * Resolves a url given an optional base url\r\n     * Uses window.URL to do the resolution.\r\n     *\r\n     * @param {string} url\r\n     * @param {string} [baseUrl]\r\n     * @return {string}\r\n     * @memberof module:DefaultURLUtils\r\n     * @instance\r\n     * @private\r\n     */\r\n    const nativeURLResolver = (url, baseUrl) => {\r\n        try {\r\n            return new window.URL(url, baseUrl).toString();\r\n        } catch (e) {\r\n            return url;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Resolves a url given an optional base url\r\n     * Does not resolve ./, ../ etc but will do enough to construct something\r\n     * which will satisfy XHR etc when window.URL is not available ie\r\n     * IE11/node etc.\r\n     *\r\n     * @param {string} url\r\n     * @param {string} [baseUrl]\r\n     * @return {string}\r\n     * @memberof module:DefaultURLUtils\r\n     * @instance\r\n     * @private\r\n     */\r\n    const dumbURLResolver = (url, baseUrl) => {\r\n        let baseUrlParseFunc = parseBaseUrl;\r\n\r\n        if (!baseUrl) {\r\n            return url;\r\n        }\r\n\r\n        if (!isRelative(url)) {\r\n            return url;\r\n        }\r\n\r\n        if (isPathAbsolute(url)) {\r\n            baseUrlParseFunc = parseOrigin;\r\n        }\r\n\r\n        if (isSchemeRelative(url)) {\r\n            baseUrlParseFunc = parseScheme;\r\n        }\r\n\r\n        const base = baseUrlParseFunc(baseUrl);\r\n        const joinChar =\r\n              base.charAt(base.length - 1) !== '/' &&\r\n              url.charAt(0) !== '/' ?\r\n              '/' : '';\r\n\r\n        return [base, url].join(joinChar);\r\n    };\r\n\r\n    function setup() {\r\n        try {\r\n            const u = new window.URL('x', 'http://y'); //jshint ignore:line\r\n            resolveFunction = nativeURLResolver;\r\n        } catch (e) {\r\n            // must be IE11/Node etc\r\n        } finally {\r\n            resolveFunction = resolveFunction || dumbURLResolver;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a string that contains the Base URL of a URL, if determinable.\r\n     * @param {string} url - full url\r\n     * @return {string}\r\n     * @memberof module:DefaultURLUtils\r\n     * @instance\r\n     */\r\n    function parseBaseUrl(url) {\r\n        const slashIndex = url.indexOf('/');\r\n        const lastSlashIndex = url.lastIndexOf('/');\r\n\r\n        if (slashIndex !== -1) {\r\n            // if there is only '//'\r\n            if (lastSlashIndex === slashIndex + 1) {\r\n                return url;\r\n            }\r\n\r\n            if (url.indexOf('?') !== -1) {\r\n                url = url.substring(0, url.indexOf('?'));\r\n            }\r\n\r\n            return url.substring(0, lastSlashIndex + 1);\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * Returns a string that contains the scheme and origin of a URL,\r\n     * if determinable.\r\n     * @param {string} url - full url\r\n     * @return {string}\r\n     * @memberof module:DefaultURLUtils\r\n     * @instance\r\n     */\r\n    function parseOrigin(url) {\r\n        const matches = url.match(originRegex);\r\n\r\n        if (matches) {\r\n            return matches[1];\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * Returns a string that contains the fragment of a URL without scheme,\r\n     * if determinable.\r\n     * @param {string} url - full url\r\n     * @return {string}\r\n     * @memberof module:DefaultURLUtils\r\n     * @instance\r\n     */\r\n    function removeHostname(url) {\r\n        let urlParts = /^(?:\\w+\\:\\/\\/)?([^\\/]+)(.*)$/.exec(url); //[1] = host / [2] = path\r\n        return urlParts[2].substring(1);\r\n    }\r\n\r\n    /**\r\n     * Returns a string that contains the scheme of a URL, if determinable.\r\n     * @param {string} url - full url\r\n     * @return {string}\r\n     * @memberof module:DefaultURLUtils\r\n     * @instance\r\n     */\r\n    function parseScheme(url) {\r\n        const matches = url.match(schemeRegex);\r\n\r\n        if (matches) {\r\n            return matches[0];\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * Determines whether the url is relative.\r\n     * @return {boolean}\r\n     * @param {string} url\r\n     * @memberof module:DefaultURLUtils\r\n     * @instance\r\n     */\r\n    function isRelative(url) {\r\n        return !schemeRegex.test(url);\r\n    }\r\n\r\n    /**\r\n     * Determines whether the url is path-absolute.\r\n     * @return {bool}\r\n     * @param {string} url\r\n     * @memberof module:DefaultURLUtils\r\n     * @instance\r\n     */\r\n    function isPathAbsolute(url) {\r\n        return isRelative(url) && url.charAt(0) === '/';\r\n    }\r\n\r\n    /**\r\n     * Determines whether the url is scheme-relative.\r\n     * @return {bool}\r\n     * @param {string} url\r\n     * @memberof module:DefaultURLUtils\r\n     * @instance\r\n     */\r\n    function isSchemeRelative(url) {\r\n        return url.indexOf('//') === 0;\r\n    }\r\n\r\n    /**\r\n     * Determines whether the url is an HTTP-URL as defined in ISO/IEC\r\n     * 23009-1:2014 3.1.15. ie URL with a fixed scheme of http or https\r\n     * @return {bool}\r\n     * @param {string} url\r\n     * @memberof module:DefaultURLUtils\r\n     * @instance\r\n     */\r\n    function isHTTPURL(url) {\r\n        return httpUrlRegex.test(url);\r\n    }\r\n\r\n    /**\r\n     * Determines whether the supplied url has https scheme\r\n     * @return {bool}\r\n     * @param {string} url\r\n     * @memberof module:DefaultURLUtils\r\n     * @instance\r\n     */\r\n    function isHTTPS(url) {\r\n        return httpsUrlRegex.test(url);\r\n    }\r\n\r\n    /**\r\n     * Resolves a url given an optional base url\r\n     * @return {string}\r\n     * @param {string} url\r\n     * @param {string} [baseUrl]\r\n     * @memberof module:DefaultURLUtils\r\n     * @instance\r\n     */\r\n    function resolve(url, baseUrl) {\r\n        return resolveFunction(url, baseUrl);\r\n    }\r\n\r\n    setup();\r\n\r\n    const instance = {\r\n        parseBaseUrl:       parseBaseUrl,\r\n        parseOrigin:        parseOrigin,\r\n        parseScheme:        parseScheme,\r\n        isRelative:         isRelative,\r\n        isPathAbsolute:     isPathAbsolute,\r\n        isSchemeRelative:   isSchemeRelative,\r\n        isHTTPURL:          isHTTPURL,\r\n        isHTTPS:            isHTTPS,\r\n        removeHostname:     removeHostname,\r\n        resolve:            resolve\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nDefaultURLUtils.__dashjs_factory_name = 'DefaultURLUtils';\r\nexport default FactoryMaker.getSingletonFactory(DefaultURLUtils);\r\n"]}