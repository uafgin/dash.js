{"version":3,"sources":["../../../../../src/streaming/utils/IsoFile.js"],"names":["IsoFile","instance","parsedIsoFile","getBox","type","boxes","length","fetch","convertToDashIsoBox","getBoxes","fetchAll","boxData","box","i","ln","push","setData","value","getLastBox","IsoBox","hasOwnProperty","isComplete","_incomplete","__dashjs_factory_name","FactoryMaker","getClassFactory"],"mappings":"sEA+BA,oC,6CACA,qD,4IAhCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAkCA,QAASA,QAAT,EAAmB,CAEf,GAAIC,gBAAJ,CACIC,oBADJ,CAGA;;;;MAKA,QAASC,OAAT,CAAgBC,IAAhB,CAAsB,CAClB,GAAI,CAACA,IAAD,EAAS,CAACF,aAAV,EAA2B,CAACA,cAAcG,KAA1C,EAAoDH,cAAcG,KAAd,CAAoBC,MAApB,GAA+B,CAAnF,EAAyF,MAAOJ,eAAcK,KAArB,GAA+B,UAA5H,CAAwI,MAAO,KAAP,CAExI,MAAOC,qBAAoBN,cAAcK,KAAd,CAAoBH,IAApB,CAApB,CAAP,CACH,CAED;;;;MAKA,QAASK,SAAT,CAAkBL,IAAlB,CAAwB,CACpB,GAAIC,OAAQ,EAAZ,CAEA,GAAI,CAACD,IAAD,EAAS,CAACF,aAAV,EAA2B,MAAOA,eAAcQ,QAArB,GAAkC,UAAjE,CAA6E,CACzE,MAAOL,MAAP,CACH,CAED,GAAIM,SAAUT,cAAcQ,QAAd,CAAuBN,IAAvB,CAAd,CACA,GAAIQ,WAAJ,CAEA,IAAK,GAAIC,GAAI,CAAR,CAAWC,GAAKH,QAAQL,MAA7B,CAAqCO,EAAIC,EAAzC,CAA6CD,GAA7C,CAAkD,CAC9CD,IAAMJ,oBAAoBG,QAAQE,CAAR,CAApB,CAAN,CAEA,GAAID,GAAJ,CAAS,CACLP,MAAMU,IAAN,CAAWH,GAAX,EACH,CACJ,CAED,MAAOP,MAAP,CACH,CAED;;;MAIA,QAASW,QAAT,CAAiBC,KAAjB,CAAwB,CACpBf,cAAgBe,KAAhB,CACH,CAED;;;MAIA,QAASC,WAAT,EAAsB,CAClB,GAAI,CAAChB,aAAD,EAAkB,CAACA,cAAcG,KAAjC,EAA0C,CAACH,cAAcG,KAAd,CAAoBC,MAAnE,CAA2E,MAAO,KAAP,CAE3E,GAAIF,MAAOF,cAAcG,KAAd,CAAoBH,cAAcG,KAAd,CAAoBC,MAApB,CAA6B,CAAjD,EAAoDF,IAA/D,CACA,GAAIC,OAAQI,SAASL,IAAT,CAAZ,CAEA,MAAOC,OAAMC,MAAN,CAAe,CAAf,CAAmBD,MAAMA,MAAMC,MAAN,CAAe,CAArB,CAAnB,CAA6C,IAApD,CACH,CAED,QAASE,oBAAT,CAA6BG,OAA7B,CAAsC,CAClC,GAAI,CAACA,OAAL,CAAc,MAAO,KAAP,CAEd,GAAIC,KAAM,GAAIO,iBAAJ,CAAWR,OAAX,CAAV,CAEA,GAAIA,QAAQS,cAAR,CAAuB,aAAvB,CAAJ,CAA2C,CACvCR,IAAIS,UAAJ,CAAiB,CAACV,QAAQW,WAA1B,CACH,CAED,MAAOV,IAAP,CACH,CAEDX,SAAW,CACPE,OAAQA,MADD,CAEPM,SAAUA,QAFH,CAGPO,QAASA,OAHF,CAIPE,WAAYA,UAJL,CAAX,CAOA,MAAOjB,SAAP,CACH,CACDD,QAAQuB,qBAAR,CAAgC,SAAhC,C,gBACeC,uBAAaC,eAAb,CAA6BzB,OAA7B,C","file":"IsoFile.js","sourcesContent":["/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport IsoBox from '../vo/IsoBox';\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\n\r\nfunction IsoFile() {\r\n\r\n    let instance,\r\n        parsedIsoFile;\r\n\r\n    /**\r\n    * @param {string} type\r\n    * @returns {IsoBox|null}\r\n    * @memberof IsoFile#\r\n    */\r\n    function getBox(type) {\r\n        if (!type || !parsedIsoFile || !parsedIsoFile.boxes || (parsedIsoFile.boxes.length === 0) || typeof parsedIsoFile.fetch !== 'function') return null;\r\n\r\n        return convertToDashIsoBox(parsedIsoFile.fetch(type));\r\n    }\r\n\r\n    /**\r\n    * @param {string} type\r\n    * @returns {Array|null} array of {@link IsoBox}\r\n    * @memberof IsoFile#\r\n    */\r\n    function getBoxes(type) {\r\n        let boxes = [];\r\n\r\n        if (!type || !parsedIsoFile || typeof parsedIsoFile.fetchAll !== 'function') {\r\n            return boxes;\r\n        }\r\n\r\n        let boxData = parsedIsoFile.fetchAll(type);\r\n        let box;\r\n\r\n        for (let i = 0, ln = boxData.length; i < ln; i++) {\r\n            box = convertToDashIsoBox(boxData[i]);\r\n\r\n            if (box) {\r\n                boxes.push(box);\r\n            }\r\n        }\r\n\r\n        return boxes;\r\n    }\r\n\r\n    /**\r\n    * @param {string} value\r\n    * @memberof IsoFile#\r\n    */\r\n    function setData(value) {\r\n        parsedIsoFile = value;\r\n    }\r\n\r\n    /**\r\n    * @returns {IsoBox|null}\r\n    * @memberof IsoFile#\r\n    */\r\n    function getLastBox() {\r\n        if (!parsedIsoFile || !parsedIsoFile.boxes || !parsedIsoFile.boxes.length) return null;\r\n\r\n        let type = parsedIsoFile.boxes[parsedIsoFile.boxes.length - 1].type;\r\n        let boxes = getBoxes(type);\r\n\r\n        return boxes.length > 0 ? boxes[boxes.length - 1] : null;\r\n    }\r\n\r\n    function convertToDashIsoBox(boxData) {\r\n        if (!boxData) return null;\r\n\r\n        let box = new IsoBox(boxData);\r\n\r\n        if (boxData.hasOwnProperty('_incomplete')) {\r\n            box.isComplete = !boxData._incomplete;\r\n        }\r\n\r\n        return box;\r\n    }\r\n\r\n    instance = {\r\n        getBox: getBox,\r\n        getBoxes: getBoxes,\r\n        setData: setData,\r\n        getLastBox: getLastBox\r\n    };\r\n\r\n    return instance;\r\n}\r\nIsoFile.__dashjs_factory_name = 'IsoFile';\r\nexport default FactoryMaker.getClassFactory(IsoFile);\r\n"]}