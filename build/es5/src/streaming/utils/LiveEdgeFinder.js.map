{"version":3,"sources":["../../../../../src/streaming/utils/LiveEdgeFinder.js"],"names":["LiveEdgeFinder","config","instance","timelineConverter","checkConfig","hasOwnProperty","Error","Constants","MISSING_CONFIG_ERROR","getLiveEdge","representationInfo","DVRWindow","end","reset","__dashjs_factory_name","FactoryMaker","getClassFactory"],"mappings":"sEA8BA,qD,yDACA,iD,sIAEA;;;;;GAjCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAuCA,QAASA,eAAT,CAAwBC,MAAxB,CAAgC,CAE5BA,OAASA,QAAU,EAAnB,CACA,GAAIC,gBAAJ,CACA,GAAIC,mBAAoBF,OAAOE,iBAA/B,CAEA,QAASC,YAAT,EAAuB,CACnB,GAAI,CAACD,iBAAD,EAAsB,CAACA,kBAAkBE,cAAlB,CAAiC,qBAAjC,CAA3B,CAAoF,CAChF,KAAM,IAAIC,MAAJ,CAAUC,oBAAUC,oBAApB,CAAN,CACH,CACJ,CAED,QAASC,YAAT,CAAqBC,kBAArB,CAAyC,CACrCN,cACA,MAAOM,oBAAmBC,SAAnB,CAA+BD,mBAAmBC,SAAnB,CAA6BC,GAA5D,CAAkE,CAAzE,CACH,CAED,QAASC,MAAT,EAAiB,CACbV,kBAAoB,IAApB,CACH,CAEDD,SAAW,CACPO,YAAaA,WADN,CAEPI,MAAOA,KAFA,CAAX,CAKA,MAAOX,SAAP,CACH,CAEDF,eAAec,qBAAf,CAAuC,gBAAvC,C,gBACeC,uBAAaC,eAAb,CAA6BhB,cAA7B,C","file":"LiveEdgeFinder.js","sourcesContent":["/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\nimport Constants from '../constants/Constants';\r\n\r\n/**\r\n * @param {Object} config\r\n * @returns {{initialize: initialize, getLiveEdge: getLiveEdge, reset: reset}|*}\r\n * @constructor\r\n * @ignore\r\n */\r\nfunction LiveEdgeFinder(config) {\r\n\r\n    config = config || {};\r\n    let instance;\r\n    let timelineConverter = config.timelineConverter;\r\n\r\n    function checkConfig() {\r\n        if (!timelineConverter || !timelineConverter.hasOwnProperty('getExpectedLiveEdge')) {\r\n            throw new Error(Constants.MISSING_CONFIG_ERROR);\r\n        }\r\n    }\r\n\r\n    function getLiveEdge(representationInfo) {\r\n        checkConfig();\r\n        return representationInfo.DVRWindow ? representationInfo.DVRWindow.end : 0;\r\n    }\r\n\r\n    function reset() {\r\n        timelineConverter = null;\r\n    }\r\n\r\n    instance = {\r\n        getLiveEdge: getLiveEdge,\r\n        reset: reset\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nLiveEdgeFinder.__dashjs_factory_name = 'LiveEdgeFinder';\r\nexport default FactoryMaker.getClassFactory(LiveEdgeFinder);\r\n"]}