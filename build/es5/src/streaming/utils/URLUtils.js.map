{"version":3,"sources":["../../../../../src/streaming/utils/URLUtils.js"],"names":["URLUtils","instance","defaultURLUtils","regexUtils","context","getUtils","url","i","length","regex","test","utils","setup","getInstance","registerUrlRegex","push","internalCall","functionName","baseUrl","parseBaseUrl","parseOrigin","removeHostname","parseScheme","isRelative","isPathAbsolute","isSchemeRelative","isHTTPURL","isHTTPS","resolve","__dashjs_factory_name","factory","FactoryMaker","getSingletonFactory"],"mappings":"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","file":"URLUtils.js","sourcesContent":["/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\nimport DefaultURLUtils from './DefaultURLUtils';\r\n\r\n/**\r\n * @module URLUtils\r\n * @ignore\r\n * @description Provides utility functions for operating on URLs.\r\n * Initially this is simply a method to determine the Base URL of a URL, but\r\n * should probably include other things provided all over the place such as\r\n * determining whether a URL is relative/absolute, resolving two paths etc.\r\n */\r\nfunction URLUtils() {\r\n\r\n    let instance;\r\n    let defaultURLUtils;\r\n    let regexUtils = [];\r\n    const context = this.context;\r\n\r\n    function getUtils(url) {\r\n        let i;\r\n        for (i = 0; i < regexUtils.length; i++) {\r\n            let regex = regexUtils[i].regex;\r\n            if (regex.test(url)) {\r\n                return regexUtils[i].utils;\r\n            }\r\n        }\r\n        return defaultURLUtils;\r\n    }\r\n\r\n    function setup() {\r\n        defaultURLUtils = DefaultURLUtils(context).getInstance();\r\n    }\r\n\r\n    /**\r\n     * Register a module to handle specific url.\r\n     * @param {regex} regex - url regex\r\n     * @param {object} utils - object that handles the regex\r\n     * @memberof module:URLUtils\r\n     * @instance\r\n     */\r\n    function registerUrlRegex(regex, utils) {\r\n        regexUtils.push({regex: regex, utils: utils});\r\n    }\r\n\r\n    function internalCall(functionName, url, baseUrl) {\r\n        let utils = getUtils(baseUrl || url);\r\n        return utils && typeof (utils[functionName]) === 'function' ? utils[functionName](url, baseUrl) : defaultURLUtils[functionName](url, baseUrl);\r\n    }\r\n\r\n    /**\r\n     * Returns a string that contains the Base URL of a URL, if determinable.\r\n     * @param {string} url - full url\r\n     * @return {string}\r\n     * @memberof module:URLUtils\r\n     * @instance\r\n     */\r\n    function parseBaseUrl(url) {\r\n        return internalCall('parseBaseUrl', url);\r\n    }\r\n\r\n    /**\r\n     * Returns a string that contains the scheme and origin of a URL,\r\n     * if determinable.\r\n     * @param {string} url - full url\r\n     * @return {string}\r\n     * @memberof module:URLUtils\r\n     * @instance\r\n     */\r\n    function parseOrigin(url) {\r\n        return internalCall('parseOrigin', url);\r\n    }\r\n\r\n    /**\r\n     * Returns a string that contains the fragment of a URL without scheme,\r\n     * if determinable.\r\n     * @param {string} url - full url\r\n     * @return {string}\r\n     * @memberof module:URLUtils\r\n     * @instance\r\n     */\r\n    function removeHostname(url) {\r\n        return internalCall('removeHostname', url);\r\n    }\r\n\r\n    /**\r\n     * Returns a string that contains the scheme of a URL, if determinable.\r\n     * @param {string} url - full url\r\n     * @return {string}\r\n     * @memberof module:URLUtils\r\n     * @instance\r\n     */\r\n    function parseScheme(url) {\r\n        return internalCall('parseScheme', url);\r\n    }\r\n\r\n    /**\r\n     * Determines whether the url is relative.\r\n     * @return {boolean}\r\n     * @param {string} url\r\n     * @memberof module:URLUtils\r\n     * @instance\r\n     */\r\n    function isRelative(url) {\r\n        return internalCall('isRelative', url);\r\n    }\r\n\r\n    /**\r\n     * Determines whether the url is path-absolute.\r\n     * @return {bool}\r\n     * @param {string} url\r\n     * @memberof module:URLUtils\r\n     * @instance\r\n     */\r\n    function isPathAbsolute(url) {\r\n        return internalCall('isPathAbsolute', url);\r\n    }\r\n\r\n    /**\r\n     * Determines whether the url is scheme-relative.\r\n     * @return {bool}\r\n     * @param {string} url\r\n     * @memberof module:URLUtils\r\n     * @instance\r\n     */\r\n    function isSchemeRelative(url) {\r\n        return internalCall('isSchemeRelative', url);\r\n    }\r\n\r\n    /**\r\n     * Determines whether the url is an HTTP-URL as defined in ISO/IEC\r\n     * 23009-1:2014 3.1.15. ie URL with a fixed scheme of http or https\r\n     * @return {bool}\r\n     * @param {string} url\r\n     * @memberof module:URLUtils\r\n     * @instance\r\n     */\r\n    function isHTTPURL(url) {\r\n        return internalCall('isHTTPURL', url);\r\n    }\r\n\r\n    /**\r\n     * Determines whether the supplied url has https scheme\r\n     * @return {bool}\r\n     * @param {string} url\r\n     * @memberof module:URLUtils\r\n     * @instance\r\n     */\r\n    function isHTTPS(url) {\r\n        return internalCall('isHTTPS', url);\r\n    }\r\n\r\n    /**\r\n     * Resolves a url given an optional base url\r\n     * @return {string}\r\n     * @param {string} url\r\n     * @param {string} [baseUrl]\r\n     * @memberof module:URLUtils\r\n     * @instance\r\n     */\r\n    function resolve(url, baseUrl) {\r\n        return internalCall('resolve', url, baseUrl);\r\n    }\r\n\r\n    setup();\r\n    instance = {\r\n        registerUrlRegex:   registerUrlRegex,\r\n        parseBaseUrl:       parseBaseUrl,\r\n        parseOrigin:        parseOrigin,\r\n        parseScheme:        parseScheme,\r\n        isRelative:         isRelative,\r\n        isPathAbsolute:     isPathAbsolute,\r\n        isSchemeRelative:   isSchemeRelative,\r\n        isHTTPURL:          isHTTPURL,\r\n        isHTTPS:            isHTTPS,\r\n        removeHostname:     removeHostname,\r\n        resolve:            resolve\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nURLUtils.__dashjs_factory_name = 'URLUtils';\r\nconst factory = FactoryMaker.getSingletonFactory(URLUtils);\r\nexport default factory;\r\n"]}