{"version":3,"sources":["../../../../../src/streaming/utils/Capabilities.js"],"names":["supportsMediaSource","codecCompatibilityTable","hasWebKit","window","hasMediaSource","Capabilities","instance","encryptedMediaSupported","setup","supportsEncryptedMedia","setEncryptedMediaSupported","value","supportsCodec","codec","MediaSource","isTypeSupported","WebKitMediaSource","supportsEssentialProperty","ep","THUMBNAILS_SCHEME_ID_URIS","indexOf","schemeIdUri","e","codecRootCompatibleWithCodec","codec1","codec2","codecRoot","split","rootCompatible","compatTableCodec","i","length","compatibleCodecs","some","compatibleCodec","__dashjs_factory_name","FactoryMaker","getSingletonFactory"],"mappings":"8EA4CgBA,mB,CAAAA,mB,CAdhB,qD,yDACA,6D,mFA/BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAiCA,GAAMC,yBAA0B,CAC5B,CACI,QAAS,MADb,CAEI,mBAAoB,CAAC,MAAD,CAFxB,CAD4B,CAK5B,CACI,QAAS,MADb,CAEI,mBAAoB,CAAC,MAAD,CAFxB,CAL4B,CAAhC,CAWO,QAASD,oBAAT,EAA+B,CAClC,GAAIE,WAAa,qBAAuBC,OAAxC,CACA,GAAIC,gBAAkB,eAAiBD,OAAvC,CAEA,MAAQD,YAAaE,cAArB,CACH,CAED,QAASC,aAAT,EAAwB,CAEpB,GAAIC,gBAAJ,CACIC,8BADJ,CAGA,QAASC,MAAT,EAAiB,CACbD,wBAA0B,KAA1B,CACH,CAED;;;;;OAMA,QAASE,uBAAT,EAAkC,CAC9B,MAAOF,wBAAP,CACH,CAED;;;OAIA,QAASG,2BAAT,CAAoCC,KAApC,CAA2C,CACvCJ,wBAA0BI,KAA1B,CACH,CAED;;;;OAKA,QAASC,cAAT,CAAuBC,KAAvB,CAA8B,CAC1B,GAAI,eAAiBV,OAAjB,EAA2BW,YAAYC,eAAZ,CAA4BF,KAA5B,CAA/B,CAAmE,CAC/D,MAAO,KAAP,CACH,CAED,GAAI,qBAAuBV,OAAvB,EAAiCa,kBAAkBD,eAAlB,CAAkCF,KAAlC,CAArC,CAA+E,CAC3E,MAAO,KAAP,CACH,CAED,MAAO,MAAP,CACH,CAED;;;;OAKA,QAASI,0BAAT,CAAmCC,EAAnC,CAAuC,CACnC,GAAI,CACA,MAAOC,4CAA0BC,OAA1B,CAAkCF,GAAGG,WAArC,IAAsD,CAAC,CAA9D,CACH,CAAC,MAAOC,CAAP,CAAU,CACR,MAAO,KAAP,CACH,CACJ,CAED;;;;;OAMA,QAASC,6BAAT,CAAsCC,MAAtC,CAA8CC,MAA9C,CAAsD,CAClD,GAAMC,WAAYF,OAAOG,KAAP,CAAa,GAAb,EAAkB,CAAlB,CAAlB,CACA,GAAMC,gBAAiBH,OAAOL,OAAP,CAAeM,SAAf,IAA8B,CAArD,CACA,GAAIG,wBAAJ,CACA,IAAK,GAAIC,GAAI,CAAb,CAAgBA,EAAI7B,wBAAwB8B,MAA5C,CAAoDD,GAApD,CAAyD,CACrD,GAAI7B,wBAAwB6B,CAAxB,EAA2BjB,KAA3B,GAAqCa,SAAzC,CAAoD,CAChDG,iBAAmB5B,wBAAwB6B,CAAxB,CAAnB,CACA,MACH,CACJ,CACD,GAAID,gBAAJ,CAAsB,CAClB,MAAOD,iBAAkBC,iBAAiBG,gBAAjB,CAAkCC,IAAlC,CAAuC,SAACC,eAAD,QAAqBT,QAAOL,OAAP,CAAec,eAAf,IAAoC,CAAzD,EAAvC,CAAzB,CACH,CACD,MAAON,eAAP,CACH,CAEDtB,SAAW,CACPN,uCADO,CAEPS,6CAFO,CAGPG,2BAHO,CAIPF,qDAJO,CAKPO,mDALO,CAMPM,yDANO,CAAX,CASAf,QAEA,MAAOF,SAAP,CACH,CAEDD,aAAa8B,qBAAb,CAAqC,cAArC,C,gBACeC,uBAAaC,mBAAb,CAAiChC,YAAjC,C","file":"Capabilities.js","sourcesContent":["/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\nimport {THUMBNAILS_SCHEME_ID_URIS} from '../thumbnail/ThumbnailTracks';\r\n\r\nconst codecCompatibilityTable = [\r\n    {\r\n        'codec': 'avc1',\r\n        'compatibleCodecs': ['avc3']\r\n    },\r\n    {\r\n        'codec': 'avc3',\r\n        'compatibleCodecs': ['avc1']\r\n    }\r\n];\r\n\r\nexport function supportsMediaSource() {\r\n    let hasWebKit = ('WebKitMediaSource' in window);\r\n    let hasMediaSource = ('MediaSource' in window);\r\n\r\n    return (hasWebKit || hasMediaSource);\r\n}\r\n\r\nfunction Capabilities() {\r\n\r\n    let instance,\r\n        encryptedMediaSupported;\r\n\r\n    function setup() {\r\n        encryptedMediaSupported = false;\r\n    }\r\n\r\n    /**\r\n     * Returns whether Encrypted Media Extensions are supported on this\r\n     * user agent\r\n     *\r\n     * @return {boolean} true if EME is supported, false otherwise\r\n     */\r\n    function supportsEncryptedMedia() {\r\n        return encryptedMediaSupported;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {boolean} value\r\n     */\r\n    function setEncryptedMediaSupported(value) {\r\n        encryptedMediaSupported = value;\r\n    }\r\n\r\n    /**\r\n     * Check if a codec is supported by the MediaSource\r\n     * @param {string} codec\r\n     * @return {boolean}\r\n     */\r\n    function supportsCodec(codec) {\r\n        if ('MediaSource' in window && MediaSource.isTypeSupported(codec)) {\r\n            return true;\r\n        }\r\n\r\n        if ('WebKitMediaSource' in window && WebKitMediaSource.isTypeSupported(codec)) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if a specific EssentialProperty is supported\r\n     * @param {object} ep\r\n     * @return {boolean}\r\n     */\r\n    function supportsEssentialProperty(ep) {\r\n        try {\r\n            return THUMBNAILS_SCHEME_ID_URIS.indexOf(ep.schemeIdUri) !== -1;\r\n        } catch (e) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if the root of the old codec is the same as the new one, or if it's declared as compatible in the compat table\r\n     * @param {string} codec1\r\n     * @param {string} codec2\r\n     * @return {boolean}\r\n     */\r\n    function codecRootCompatibleWithCodec(codec1, codec2) {\r\n        const codecRoot = codec1.split('.')[0];\r\n        const rootCompatible = codec2.indexOf(codecRoot) === 0;\r\n        let compatTableCodec;\r\n        for (let i = 0; i < codecCompatibilityTable.length; i++) {\r\n            if (codecCompatibilityTable[i].codec === codecRoot) {\r\n                compatTableCodec = codecCompatibilityTable[i];\r\n                break;\r\n            }\r\n        }\r\n        if (compatTableCodec) {\r\n            return rootCompatible || compatTableCodec.compatibleCodecs.some((compatibleCodec) => codec2.indexOf(compatibleCodec) === 0);\r\n        }\r\n        return rootCompatible;\r\n    }\r\n\r\n    instance = {\r\n        supportsMediaSource,\r\n        supportsEncryptedMedia,\r\n        supportsCodec,\r\n        setEncryptedMediaSupported,\r\n        supportsEssentialProperty,\r\n        codecRootCompatibleWithCodec\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nCapabilities.__dashjs_factory_name = 'Capabilities';\r\nexport default FactoryMaker.getSingletonFactory(Capabilities);\r\n"]}