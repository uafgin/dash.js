{"version":3,"sources":["../../../../../../../src/streaming/rules/abr/lolp/QoeInfo.js"],"names":["QoeInfo","type","lastBitrate","weights","bitrateReward","bitrateSwitchPenalty","rebufferPenalty","latencyPenalty","playbackSpeedPenalty","bitrateWSum","bitrateSwitchWSum","rebufferWSum","latencyWSum","playbackSpeedWSum","totalQoe"],"mappings":"uNAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+BA;;;MAIMA,Q,CAEF,kBAAc,+BACV;AACA,KAAKC,IAAL,CAAY,IAAZ,CAEA;AACA,KAAKC,WAAL,CAAmB,IAAnB,CAEA;AACA,KAAKC,OAAL,CAAe,EAAf,CACA,KAAKA,OAAL,CAAaC,aAAb,CAA6B,IAA7B,CACA,KAAKD,OAAL,CAAaE,oBAAb,CAAoC,IAApC,CACA,KAAKF,OAAL,CAAaG,eAAb,CAA+B,IAA/B,CACA,KAAKH,OAAL,CAAaI,cAAb,CAA8B,IAA9B,CACA,KAAKJ,OAAL,CAAaK,oBAAb,CAAoC,IAApC,CAEA;AACA,KAAKC,WAAL,CAAmB,CAAnB,CAAgC;AAChC,KAAKC,iBAAL,CAAyB,CAAzB,CAAgC;AAChC,KAAKC,YAAL,CAAoB,CAApB,CAAgC;AAChC,KAAKC,WAAL,CAAmB,CAAnB,CAAgC;AAChC,KAAKC,iBAAL,CAAyB,CAAzB,CAAgC;AAEhC;AACA,KAAKC,QAAL,CAAgB,CAAhB,CACH,C,iBAGUd,O","file":"QoeInfo.js","sourcesContent":["/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass QoeInfo {\r\n\r\n    constructor() {\r\n        // Type e.g. 'segment'\r\n        this.type = null;\r\n\r\n        // Store lastBitrate for calculation of bitrateSwitchWSum\r\n        this.lastBitrate = null;\r\n\r\n        // Weights for each Qoe factor\r\n        this.weights = {};\r\n        this.weights.bitrateReward = null;\r\n        this.weights.bitrateSwitchPenalty = null;\r\n        this.weights.rebufferPenalty = null;\r\n        this.weights.latencyPenalty = null;\r\n        this.weights.playbackSpeedPenalty = null;\r\n\r\n        // Weighted Sum for each Qoe factor\r\n        this.bitrateWSum = 0;           // kbps\r\n        this.bitrateSwitchWSum = 0;     // kbps\r\n        this.rebufferWSum = 0;          // seconds\r\n        this.latencyWSum = 0;           // seconds\r\n        this.playbackSpeedWSum = 0;     // e.g. 0.95, 1.0, 1.05\r\n\r\n        // Store total Qoe value based on current Weighted Sum values\r\n        this.totalQoe = 0;\r\n    }\r\n}\r\n\r\nexport default QoeInfo;\r\n"]}