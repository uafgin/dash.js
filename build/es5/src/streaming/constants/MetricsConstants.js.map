{"version":3,"sources":["../../../../../src/streaming/constants/MetricsConstants.js"],"names":["MetricsConstants","TCP_CONNECTION","HTTP_REQUEST","TRACK_SWITCH","BUFFER_LEVEL","BUFFER_LOADED","ABANDON_LOAD","ALLOW_LOAD","BUFFER_EMPTY","BUFFER_STATE","DVR_INFO","DROPPED_FRAMES","SCHEDULING_INFO","REQUESTS_QUEUE","MANIFEST_UPDATE","MANIFEST_UPDATE_STREAM_INFO","MANIFEST_UPDATE_TRACK_INFO","PLAY_LIST","DVB_ERRORS","init","constants"],"mappings":"qtBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+BA;;;;MAKMA,iB,4EAEM,CACJ,KAAKC,cAAL,CAAsB,SAAtB,CACA,KAAKC,YAAL,CAAoB,UAApB,CACA,KAAKC,YAAL,CAAoB,eAApB,CACA,KAAKC,YAAL,CAAoB,aAApB,CACA,KAAKC,aAAL,CAAqB,cAArB,CACA,KAAKC,YAAL,CAAoB,aAApB,CACA,KAAKC,UAAL,CAAkB,WAAlB,CACA,KAAKC,YAAL,CAAoB,eAApB,CACA,KAAKC,YAAL,CAAoB,aAApB,CACA,KAAKC,QAAL,CAAgB,SAAhB,CACA,KAAKC,cAAL,CAAsB,eAAtB,CACA,KAAKC,eAAL,CAAuB,gBAAvB,CACA,KAAKC,cAAL,CAAsB,eAAtB,CACA,KAAKC,eAAL,CAAuB,gBAAvB,CACA,KAAKC,2BAAL,CAAmC,0BAAnC,CACA,KAAKC,0BAAL,CAAkC,kCAAlC,CACA,KAAKC,SAAL,CAAiB,UAAjB,CACA,KAAKC,UAAL,CAAkB,WAAlB,CACH,C,IAED,2BAAc,wCACV,KAAKC,IAAL,GACH,C,4BAGL,GAAIC,WAAY,GAAIpB,iBAAJ,EAAhB,C,gBACeoB,S","file":"MetricsConstants.js","sourcesContent":["/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Metrics Constants declaration\r\n * @class\r\n * @ignore\r\n */\r\nclass MetricsConstants {\r\n\r\n    init () {\r\n        this.TCP_CONNECTION = 'TcpList';\r\n        this.HTTP_REQUEST = 'HttpList';\r\n        this.TRACK_SWITCH = 'RepSwitchList';\r\n        this.BUFFER_LEVEL = 'BufferLevel';\r\n        this.BUFFER_LOADED = 'bufferLoaded';\r\n        this.ABANDON_LOAD = 'abandonload';\r\n        this.ALLOW_LOAD = 'allowload';\r\n        this.BUFFER_EMPTY = 'bufferStalled';\r\n        this.BUFFER_STATE = 'BufferState';\r\n        this.DVR_INFO = 'DVRInfo';\r\n        this.DROPPED_FRAMES = 'DroppedFrames';\r\n        this.SCHEDULING_INFO = 'SchedulingInfo';\r\n        this.REQUESTS_QUEUE = 'RequestsQueue';\r\n        this.MANIFEST_UPDATE = 'ManifestUpdate';\r\n        this.MANIFEST_UPDATE_STREAM_INFO = 'ManifestUpdatePeriodInfo';\r\n        this.MANIFEST_UPDATE_TRACK_INFO = 'ManifestUpdateRepresentationInfo';\r\n        this.PLAY_LIST = 'PlayList';\r\n        this.DVB_ERRORS = 'DVBErrors';\r\n    }\r\n\r\n    constructor() {\r\n        this.init();\r\n    }\r\n}\r\n\r\nlet constants = new MetricsConstants();\r\nexport default constants;\r\n"]}