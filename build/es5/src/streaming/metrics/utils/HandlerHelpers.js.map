{"version":3,"sources":["../../../../../../src/streaming/metrics/utils/HandlerHelpers.js"],"names":["HandlerHelpers","reconstructFullMetricName","key","n","type","mn","length","validateN","n_ms","Error","isNaN","__dashjs_factory_name","dashjs","FactoryMaker","getSingletonFactory"],"mappings":"sEAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+BC;;IAGD,QAASA,eAAT,EAA0B,CACtB,MAAO,CACHC,0BAA2B,mCAAUC,GAAV,CAAeC,CAAf,CAAkBC,IAAlB,CAAwB,CAC/C,GAAIC,IAAKH,GAAT,CAEA,GAAIC,CAAJ,CAAO,CACHE,IAAM,IAAMF,CAAZ,CAEA,GAAIC,MAAQA,KAAKE,MAAjB,CAAyB,CACrBD,IAAM,IAAMD,IAAZ,CACH,CAEDC,IAAM,GAAN,CACH,CAED,MAAOA,GAAP,CACH,CAfE,CAiBHE,UAAW,mBAAUC,IAAV,CAAgB,CACvB,GAAI,CAACA,IAAL,CAAW,CACP,KAAM,IAAIC,MAAJ,CAAU,WAAV,CAAN,CACH,CAED,GAAIC,MAAMF,IAAN,CAAJ,CAAiB,CACb,KAAM,IAAIC,MAAJ,CAAU,UAAV,CAAN,CACH,CAED;AACA;AACA,GAAID,KAAO,CAAX,CAAc,CACV,KAAM,IAAIC,MAAJ,CAAU,oBAAV,CAAN,CACH,CAED,MAAOD,KAAP,CACH,CAjCE,CAAP,CAmCH,CAEDR,eAAeW,qBAAf,CAAuC,gBAAvC,C,gBACeC,OAAOC,YAAP,CAAoBC,mBAApB,CAAwCd,cAAxC,C,CAAyD","file":"HandlerHelpers.js","sourcesContent":["/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n /**\r\n  * @ignore\r\n  */\r\nfunction HandlerHelpers() {\r\n    return {\r\n        reconstructFullMetricName: function (key, n, type) {\r\n            let mn = key;\r\n\r\n            if (n) {\r\n                mn += '(' + n;\r\n\r\n                if (type && type.length) {\r\n                    mn += ',' + type;\r\n                }\r\n\r\n                mn += ')';\r\n            }\r\n\r\n            return mn;\r\n        },\r\n\r\n        validateN: function (n_ms) {\r\n            if (!n_ms) {\r\n                throw new Error('missing n');\r\n            }\r\n\r\n            if (isNaN(n_ms)) {\r\n                throw new Error('n is NaN');\r\n            }\r\n\r\n            // n is a positive integer is defined to refer to the metric\r\n            // in which the buffer level is recorded every n ms.\r\n            if (n_ms < 0) {\r\n                throw new Error('n must be positive');\r\n            }\r\n\r\n            return n_ms;\r\n        }\r\n    };\r\n}\r\n\r\nHandlerHelpers.__dashjs_factory_name = 'HandlerHelpers';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(HandlerHelpers); /* jshint ignore:line */\r\n"]}