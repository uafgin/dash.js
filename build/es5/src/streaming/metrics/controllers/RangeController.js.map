{"version":3,"sources":["../../../../../../src/streaming/metrics/controllers/RangeController.js"],"names":["RangeController","config","useWallClockTime","context","instance","ranges","mediaElement","initialize","rs","length","forEach","start","r","starttime","end","duration","add","_useWallClockTime","reset","clear","setup","create","isEnabled","numRanges","time","Date","getTime","currentTime","i","__dashjs_factory_name","dashjs","FactoryMaker","getClassFactory"],"mappings":"sEA+BA,8D,oJAEA,QAASA,gBAAT,CAAyBC,MAAzB,CAAiC,CAE7BA,OAASA,QAAU,EAAnB,CACA,GAAIC,kBAAmB,KAAvB,CACA,GAAIC,SAAU,KAAKA,OAAnB,CACA,GAAIC,gBAAJ,CACIC,aADJ,CAGA,GAAIC,cAAeL,OAAOK,YAA1B,CAEA,QAASC,WAAT,CAAoBC,EAApB,CAAwB,CACpB,GAAIA,IAAMA,GAAGC,MAAb,CAAqB,CACjBD,GAAGE,OAAH,CAAW,WAAK,CACZ,GAAIC,OAAQC,EAAEC,SAAd,CACA,GAAIC,KAAMH,MAAQC,EAAEG,QAApB,CAEAV,OAAOW,GAAP,CAAWL,KAAX,CAAkBG,GAAlB,EACH,CALD,EAOAZ,iBAAmB,CAAC,CAACM,GAAG,CAAH,EAAMS,iBAA3B,CACH,CACJ,CAED,QAASC,MAAT,EAAiB,CACbb,OAAOc,KAAP,GACH,CAED,QAASC,MAAT,EAAiB,CACbf,OAAS,+BAAiBF,OAAjB,EAA0BkB,MAA1B,EAAT,CACH,CAED,QAASC,UAAT,EAAqB,CACjB,GAAIC,WAAYlB,OAAOI,MAAvB,CACA,GAAIe,YAAJ,CAEA,GAAI,CAACD,SAAL,CAAgB,CACZ,MAAO,KAAP,CACH,CAED;AACA;AACAC,KAAOtB,iBACE,GAAIuB,KAAJ,GAAWC,OAAX,GAAuB,IADzB,CAECpB,aAAaqB,WAFrB,CAIA,IAAK,GAAIC,GAAI,CAAb,CAAgBA,EAAIL,SAApB,CAA+BK,GAAK,CAApC,CAAuC,CACnC,GAAIjB,OAAQN,OAAOM,KAAP,CAAaiB,CAAb,CAAZ,CACA,GAAId,KAAMT,OAAOS,GAAP,CAAWc,CAAX,CAAV,CAEA,GAAKjB,OAASa,IAAV,EAAoBA,KAAOV,GAA/B,CAAqC,CACjC,MAAO,KAAP,CACH,CACJ,CAED,MAAO,MAAP,CACH,CAEDV,SAAW,CACPG,WAAYA,UADL,CAEPW,MAAYA,KAFL,CAGPI,UAAYA,SAHL,CAAX,CAMAF,QAEA,MAAOhB,SAAP,CACH,CAnGD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAqGAJ,gBAAgB6B,qBAAhB,CAAwC,iBAAxC,C,gBACeC,OAAOC,YAAP,CAAoBC,eAApB,CAAoChC,eAApC,C,CAAsD","file":"RangeController.js","sourcesContent":["/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport CustomTimeRanges from '../../utils/CustomTimeRanges';\r\n\r\nfunction RangeController(config) {\r\n\r\n    config = config || {};\r\n    let useWallClockTime = false;\r\n    let context = this.context;\r\n    let instance,\r\n        ranges;\r\n\r\n    let mediaElement = config.mediaElement;\r\n\r\n    function initialize(rs) {\r\n        if (rs && rs.length) {\r\n            rs.forEach(r => {\r\n                let start = r.starttime;\r\n                let end = start + r.duration;\r\n\r\n                ranges.add(start, end);\r\n            });\r\n\r\n            useWallClockTime = !!rs[0]._useWallClockTime;\r\n        }\r\n    }\r\n\r\n    function reset() {\r\n        ranges.clear();\r\n    }\r\n\r\n    function setup() {\r\n        ranges = CustomTimeRanges(context).create();\r\n    }\r\n\r\n    function isEnabled() {\r\n        let numRanges = ranges.length;\r\n        let time;\r\n\r\n        if (!numRanges) {\r\n            return true;\r\n        }\r\n\r\n        // When not present, DASH Metrics reporting is requested\r\n        // for the whole duration of the content.\r\n        time = useWallClockTime ?\r\n                (new Date().getTime() / 1000) :\r\n                mediaElement.currentTime;\r\n\r\n        for (let i = 0; i < numRanges; i += 1) {\r\n            let start = ranges.start(i);\r\n            let end = ranges.end(i);\r\n\r\n            if ((start <= time) && (time < end)) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        reset:      reset,\r\n        isEnabled:  isEnabled\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nRangeController.__dashjs_factory_name = 'RangeController';\r\nexport default dashjs.FactoryMaker.getClassFactory(RangeController); /* jshint ignore:line */\r\n"]}