{"version":3,"sources":["../../../../../../src/streaming/metrics/controllers/ReportingController.js"],"names":["ReportingController","config","reporters","instance","reportingFactory","context","getInstance","initialize","reporting","rangeController","some","reporter","create","r","push","reset","forEach","report","type","vos","__dashjs_factory_name","dashjs","FactoryMaker","getClassFactory"],"mappings":"sEA+BA,+D,oJAEA,QAASA,oBAAT,CAA6BC,MAA7B,CAAqC,CAEjC,GAAIC,WAAY,EAAhB,CACA,GAAIC,gBAAJ,CAEA,GAAMC,kBAAmB,+BAAiB,KAAKC,OAAtB,EAA+BC,WAA/B,CAA2CL,MAA3C,CAAzB,CAEA,QAASM,WAAT,CAAoBC,SAApB,CAA+BC,eAA/B,CAAgD,CAC5C;AACA;AACA;AACA;AACAD,UAAUE,IAAV,CAAe,WAAK,CAChB,GAAIC,UAAWP,iBAAiBQ,MAAjB,CAAwBC,CAAxB,CAA2BJ,eAA3B,CAAf,CAEA,GAAIE,QAAJ,CAAc,CACVT,UAAUY,IAAV,CAAeH,QAAf,EACA,MAAO,KAAP,CACH,CACJ,CAPD,EAQH,CAED,QAASI,MAAT,EAAiB,CACbb,UAAUc,OAAV,CAAkB,kBAAKH,GAAEE,KAAF,EAAL,EAAlB,EACAb,UAAY,EAAZ,CACH,CAED,QAASe,OAAT,CAAgBC,IAAhB,CAAsBC,GAAtB,CAA2B,CACvBjB,UAAUc,OAAV,CAAkB,kBAAKH,GAAEI,MAAF,CAASC,IAAT,CAAeC,GAAf,CAAL,EAAlB,EACH,CAEDhB,SAAW,CACPI,WAAYA,UADL,CAEPQ,MAAYA,KAFL,CAGPE,OAAYA,MAHL,CAAX,CAMA,MAAOd,SAAP,CACH,CAvED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAyEAH,oBAAoBoB,qBAApB,CAA4C,qBAA5C,C,gBACeC,OAAOC,YAAP,CAAoBC,eAApB,CAAoCvB,mBAApC,C,CAA0D","file":"ReportingController.js","sourcesContent":["/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport ReportingFactory from '../reporting/ReportingFactory';\r\n\r\nfunction ReportingController(config) {\r\n\r\n    let reporters = [];\r\n    let instance;\r\n\r\n    const reportingFactory = ReportingFactory(this.context).getInstance(config);\r\n\r\n    function initialize(reporting, rangeController) {\r\n        // \"if multiple Reporting elements are present, it is expected that\r\n        // the client processes one of the recognized reporting schemes.\"\r\n        // to ignore this, and support multiple Reporting per Metric,\r\n        // simply change the 'some' below to 'forEach'\r\n        reporting.some(r => {\r\n            let reporter = reportingFactory.create(r, rangeController);\r\n\r\n            if (reporter) {\r\n                reporters.push(reporter);\r\n                return true;\r\n            }\r\n        });\r\n    }\r\n\r\n    function reset() {\r\n        reporters.forEach(r => r.reset());\r\n        reporters = [];\r\n    }\r\n\r\n    function report(type, vos) {\r\n        reporters.forEach(r => r.report(type, vos));\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        reset:      reset,\r\n        report:     report\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nReportingController.__dashjs_factory_name = 'ReportingController';\r\nexport default dashjs.FactoryMaker.getClassFactory(ReportingController); /* jshint ignore:line */\r\n"]}