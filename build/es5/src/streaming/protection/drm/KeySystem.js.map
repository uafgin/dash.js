{"version":3,"sources":["../../../../../../src/streaming/protection/drm/KeySystem.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+BA;;;;;;GAQA;;;;;;;;GAUA;;;;;;;;GAUA;;;;;;;;;;GAYA;;;;;;;;;;;;GAcA;;;;;;;;;;;;GAcA;;;;;;;;;;GAYA;;;;;;;;GAUA;;;;;;GAQA","file":"KeySystem.js","sourcesContent":["/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Defines the public interface for all Key Systems (DRMs) supported\r\n * by the player.\r\n *\r\n * @interface KeySystem\r\n * @ignore\r\n */\r\n\r\n/**\r\n * Key system name string (e.g. 'org.w3.clearkey')\r\n *\r\n * @instance\r\n * @name systemString\r\n * @memberof KeySystem\r\n * @readonly\r\n * @type String\r\n */\r\n\r\n/**\r\n * Key system UUID in the form '01234567-89ab-cdef-0123-456789abcdef'\r\n *\r\n * @instance\r\n * @name uuid\r\n * @memberof KeySystem\r\n * @readonly\r\n * @type String\r\n */\r\n\r\n/**\r\n * The scheme ID URI for this key system in the form\r\n * 'urn:uuid:01234567-89ab-cdef-0123-456789abcdef' as used\r\n * in DASH ContentProtection elements\r\n *\r\n * @instance\r\n * @name schemeIdURI\r\n * @memberof KeySystem\r\n * @readonly\r\n * @type String\r\n */\r\n\r\n/**\r\n * Parse DRM-specific init data from the ContentProtection\r\n * element.\r\n *\r\n * @function\r\n * @name KeySystem#getInitData\r\n * @param {Object} contentProtection the json-style contentProtection\r\n * object representing the ContentProtection element parsed from the\r\n * MPD XML document.\r\n * @param {Object} cencContentProtection the Common Encryption content protection element or\r\n * null if not specified.\r\n * @returns {ArrayBuffer} EME initialization data\r\n */\r\n\r\n/**\r\n * For some key systems, the CDM message contains HTTP headers that\r\n * can be parsed by the application and attached to the license request.\r\n * Returns a header object with key/value pairs as object properties/values\r\n *\r\n * @function\r\n * @name KeySystem#getRequestHeadersFromMessage\r\n * @param {ArrayBuffer} message the CDM message\r\n * @returns {?Object} headers object with header names as the object property\r\n * names and header values as the corresponding object property values.  Return\r\n * null if no such headers were found or if the mechanism is not supported by\r\n * this key system\r\n */\r\n\r\n/**\r\n * For some key systems, the CDM message contains more than just the\r\n * license request data.  This method will pull the license request from\r\n * the CDM message, if necessary.\r\n *\r\n * @function\r\n * @name KeySystem#getLicenseRequestFromMessage\r\n * @param message {ArrayBuffer} the CDM message\r\n * @returns {Uint8Array} the license request message as will be passed to\r\n * XMLHttpRequest.send()\r\n */\r\n\r\n/**\r\n * Returns a license server URL as parsed from key system initialization data (PSSH).\r\n *\r\n * @function\r\n * @name KeySystem#getLicenseServerURLFromInitData\r\n * @param initData {ArrayBuffer} the initialization data.  This is just the \"Data\" field\r\n * from the PSSH box definition\r\n * @returns {?string} The license server URL or null if URL is not available in initData\r\n */\r\n\r\n/**\r\n * Returns specific CDM (custom) data.\r\n *\r\n * @function\r\n * @name MediaPlayer.dependencies.protection.KeySystem#getCDMData\r\n * @returns {ArrayBuffer} the CDM (custom) data\r\n */\r\n\r\n/**\r\n * Returns MediaKeySession session ID.\r\n *\r\n * @function\r\n * @name MediaPlayer.dependencies.protection.KeySystem#getSessionId\r\n * @returns {String} the MediaKeySession session ID\r\n */\r\n"]}