{"version":3,"sources":["../../../../../../src/streaming/protection/drm/KeySystemWidevine.js"],"names":["uuid","systemString","ProtectionConstants","WIDEVINE_KEYSTEM_STRING","schemeIdURI","KeySystemWidevine","config","instance","protData","BASE64","init","protectionData","getInitData","cp","CommonEncryption","parseInitDataFromContentProtection","getRequestHeadersFromMessage","getLicenseRequestFromMessage","message","Uint8Array","getLicenseServerURLFromInitData","getCDMData","getSessionId","sessionId","__dashjs_factory_name","dashjs","FactoryMaker","getSingletonFactory"],"mappings":"sEAsCA,qD,iEACA,wE,0JAvCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+BA;;;;;GAUA,GAAMA,MAAO,sCAAb,CACA,GAAMC,cAAeC,8BAAoBC,uBAAzC,CACA,GAAMC,aAAc,YAAcJ,IAAlC,CAEA,QAASK,kBAAT,CAA2BC,MAA3B,CAAmC,CAE/BA,OAASA,QAAU,EAAnB,CACA,GAAIC,gBAAJ,CACA,GAAIC,UAAW,IAAf,CACA,GAAMC,QAASH,OAAOG,MAAtB,CAEA,QAASC,KAAT,CAAcC,cAAd,CAA8B,CAC1B,GAAIA,cAAJ,CAAoB,CAChBH,SAAWG,cAAX,CACH,CACJ,CAED,QAASC,YAAT,CAAqBC,EAArB,CAAyB,CACrB,MAAOC,4BAAiBC,kCAAjB,CAAoDF,EAApD,CAAwDJ,MAAxD,CAAP,CACH,CAED,QAASO,6BAAT,EAAuC,WAAc,CACjD,MAAO,KAAP,CACH,CAED,QAASC,6BAAT,CAAsCC,OAAtC,CAA+C,CAC3C,MAAO,IAAIC,WAAJ,CAAeD,OAAf,CAAP,CACH,CAED,QAASE,gCAAT,EAA0C,YAAe,CACrD,MAAO,KAAP,CACH,CAED,QAASC,WAAT,EAAsB,CAClB,MAAO,KAAP,CACH,CAED,QAASC,aAAT,CAAsBT,EAAtB,CAA0B,CACtB;AACA,GAAIL,UAAYA,SAASe,SAAzB,CAAoC,CAChC,MAAOf,UAASe,SAAhB,CACH,CAFD,IAEO,IAAIV,IAAMA,GAAGU,SAAb,CAAwB,CAC3B,MAAOV,IAAGU,SAAV,CACH,CACD,MAAO,KAAP,CACH,CAEDhB,SAAW,CACPP,KAAMA,IADC,CAEPI,YAAaA,WAFN,CAGPH,aAAcA,YAHP,CAIPS,KAAMA,IAJC,CAKPE,YAAaA,WALN,CAMPI,6BAA8BA,4BANvB,CAOPC,6BAA8BA,4BAPvB,CAQPG,gCAAiCA,+BAR1B,CASPC,WAAYA,UATL,CAUPC,aAAcA,YAVP,CAAX,CAaA,MAAOf,SAAP,CACH,CAEDF,kBAAkBmB,qBAAlB,CAA0C,mBAA1C,C,gBACeC,OAAOC,YAAP,CAAoBC,mBAApB,CAAwCtB,iBAAxC,C,CAA4D","file":"KeySystemWidevine.js","sourcesContent":["/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Google Widevine DRM\r\n *\r\n * @class\r\n * @implements MediaPlayer.dependencies.protection.KeySystem\r\n */\r\n\r\nimport CommonEncryption from '../CommonEncryption';\r\nimport ProtectionConstants from '../../constants/ProtectionConstants';\r\n\r\nconst uuid = 'edef8ba9-79d6-4ace-a3c8-27dcd51d21ed';\r\nconst systemString = ProtectionConstants.WIDEVINE_KEYSTEM_STRING;\r\nconst schemeIdURI = 'urn:uuid:' + uuid;\r\n\r\nfunction KeySystemWidevine(config) {\r\n\r\n    config = config || {};\r\n    let instance;\r\n    let protData = null;\r\n    const BASE64 = config.BASE64;\r\n\r\n    function init(protectionData) {\r\n        if (protectionData) {\r\n            protData = protectionData;\r\n        }\r\n    }\r\n\r\n    function getInitData(cp) {\r\n        return CommonEncryption.parseInitDataFromContentProtection(cp, BASE64);\r\n    }\r\n\r\n    function getRequestHeadersFromMessage( /*message*/ ) {\r\n        return null;\r\n    }\r\n\r\n    function getLicenseRequestFromMessage(message) {\r\n        return new Uint8Array(message);\r\n    }\r\n\r\n    function getLicenseServerURLFromInitData( /*initData*/ ) {\r\n        return null;\r\n    }\r\n\r\n    function getCDMData() {\r\n        return null;\r\n    }\r\n\r\n    function getSessionId(cp) {\r\n        // Get sessionId from protectionData or from manifest\r\n        if (protData && protData.sessionId) {\r\n            return protData.sessionId;\r\n        } else if (cp && cp.sessionId) {\r\n            return cp.sessionId;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    instance = {\r\n        uuid: uuid,\r\n        schemeIdURI: schemeIdURI,\r\n        systemString: systemString,\r\n        init: init,\r\n        getInitData: getInitData,\r\n        getRequestHeadersFromMessage: getRequestHeadersFromMessage,\r\n        getLicenseRequestFromMessage: getLicenseRequestFromMessage,\r\n        getLicenseServerURLFromInitData: getLicenseServerURLFromInitData,\r\n        getCDMData: getCDMData,\r\n        getSessionId: getSessionId\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nKeySystemWidevine.__dashjs_factory_name = 'KeySystemWidevine';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(KeySystemWidevine); /* jshint ignore:line */\r\n"]}