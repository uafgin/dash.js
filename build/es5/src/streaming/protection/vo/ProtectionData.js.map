{"version":3,"sources":["../../../../../../src/streaming/protection/vo/ProtectionData.js"],"names":["ProtectionData","serverURL","httpRequestHeaders","clearkeys","priority","undefined"],"mappings":"uNAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+BA;;;;MAKMA,e,CACF;;;;;;;;;;;;;OAcA,wBAAYC,SAAZ,CAAuBC,kBAAvB,CAA2CC,SAA3C,CAAsDC,QAAtD,CAAgE,sCAC5D,KAAKH,SAAL,CAAiBA,SAAjB,CACA,KAAKC,kBAAL,CAA0BA,kBAA1B,CACA,KAAKC,SAAL,CAAiBA,SAAjB,CACA,KAAKC,QAAL,CAAgBA,WAAaC,SAAb,CAAyB,CAAC,CAA1B,CAA8BD,QAA9C,CACH,C,CAGL;;;;;;;;GAUA;;;;;;;;;;GAYA;;;;;;;;GAUA;;;;;;;;mBAUeJ,c","file":"ProtectionData.js","sourcesContent":["/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @classdesc Data provided for a particular piece of content to customize license server URLs,\r\n *  license server HTTP request headers, clearkeys, or other content-specific data\r\n * @ignore\r\n */\r\nclass ProtectionData {\r\n    /**\r\n     * @param {string|Object} serverURL a license server URL to use with this key system.\r\n     * When specified as a string, a single URL will be used regardless of message type.\r\n     * When specified as an object, the object will have property names for each message\r\n     * type ({@link https://w3c.github.io/encrypted-media/#idl-def-MediaKeyMessageType|message\r\n     * types defined here)} with the corresponding property value being the URL to use for\r\n     * messages of that type\r\n     * @param {Object} httpRequestHeaders headers to add to the http request\r\n     * @param {Object} clearkeys defines a set of clear keys that are available to\r\n     * the key system.  Object properties are base64-encoded keyIDs (with no padding).\r\n     * Corresponding property values are keys, base64-encoded (no padding).\r\n     * @param {number|undefined} priority priority order of the current ProtectionData\r\n     * @class\r\n     */\r\n    constructor(serverURL, httpRequestHeaders, clearkeys, priority) {\r\n        this.serverURL = serverURL;\r\n        this.httpRequestHeaders = httpRequestHeaders;\r\n        this.clearkeys = clearkeys;\r\n        this.priority = priority === undefined ? -1 : priority;\r\n    }\r\n}\r\n\r\n/**\r\n * License server URL\r\n *\r\n * @instance\r\n * @type string|Object\r\n * @name ProtectionData.serverURL\r\n * @readonly\r\n * @memberof ProtectionData\r\n */\r\n\r\n/**\r\n * HTTP Request Headers for use in license requests.  Each property name\r\n * in the object is a header name with its corresponding header value being\r\n * the property value\r\n *\r\n * @instance\r\n * @type Object\r\n * @name ProtectionData.httpRequestsHeaders\r\n * @readonly\r\n * @memberof ProtectionData\r\n */\r\n\r\n/**\r\n * ClearKey key-pairs that can be used to decrypt the content\r\n *\r\n * @instance\r\n * @type Object\r\n * @name ProtectionData.clearkeys\r\n * @readonly\r\n * @memberof ProtectionData\r\n */\r\n\r\n/**\r\n * priority\r\n *\r\n * @instance\r\n * @type Object\r\n * @name ProtectionData.priority\r\n * @readonly\r\n * @memberof ProtectionData\r\n */\r\n\r\nexport default ProtectionData;\r\n"]}