{"version":3,"sources":["../../../../../../src/streaming/protection/vo/SessionToken.js"],"names":["SessionToken"],"mappings":"uNAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA8BA;;;;;;;;;MAWMA,a,8DAEN;;;;;;;;GAUA;;;;;;;GASA;;;;;;;;;GAWA;;;;;;;;GAUA;;;;;;;mBASeA,Y","file":"SessionToken.js","sourcesContent":["/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * All session identifiers (tokens) returned by ProtectionController as well as\r\n * ProtectionModel implementations are guaranteed to contain certain properties\r\n * regardless of the proprietary data each ProtectionModel will need to attach.\r\n * This interface defines the common APIs for session tokens available for\r\n * applications to access.\r\n *\r\n * @interface SessionToken\r\n * @ignore\r\n */\r\n\r\nclass SessionToken {}\r\n\r\n/**\r\n * The initialization data used to create this session\r\n *\r\n * @instance\r\n * @name initData\r\n * @memberof SessionToken\r\n * @type ArrayBuffer\r\n * @readonly\r\n */\r\n\r\n/**\r\n * Returns the unique session ID designated to this session\r\n *\r\n * @function\r\n * @name SessionToken#getSessionID\r\n * @return {string} the session ID or the empty string if the implementation\r\n * does not support session IDs or the sessionID has not yet been established\r\n */\r\n\r\n/**\r\n * The time, in milliseconds since 01 January, 1970 UTC, after which\r\n * the key(s) in the session will no longer be usable to decrypt\r\n * media data, or NaN if no such time exists\r\n *\r\n * @function\r\n * @name SessionToken#getExpirationTime\r\n * @returns {number} the expiration time or NaN if no expiration time exists\r\n * for this session\r\n */\r\n\r\n/**\r\n * Returns a read-only map of key IDs known to the session to the\r\n * current status of the associated key.\r\n *\r\n * @function\r\n * @name SessionToken#getKeyStatuses\r\n * @returns {maplike<BufferSource,MediaKeyStatus>} the map of keys\r\n * in this session and their associated status\r\n */\r\n\r\n/**\r\n * Returns the session type.  Session types are defined\r\n * {@link https://w3c.github.io/encrypted-media/#idl-def-MediaKeySessionType|here}\r\n *\r\n * @function\r\n * @name SessionToken#getSessionType\r\n * @returns {string} The session type\r\n */\r\n\r\nexport default SessionToken;\r\n"]}