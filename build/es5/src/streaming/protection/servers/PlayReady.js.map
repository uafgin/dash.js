{"version":3,"sources":["../../../../../../src/streaming/protection/servers/PlayReady.js"],"names":["PlayReady","instance","soap","uintToString","arrayBuffer","encodedString","String","fromCharCode","apply","Uint8Array","decodedString","decodeURIComponent","escape","parseServerResponse","serverResponse","window","DOMParser","stringResponse","parser","xmlDoc","parseFromString","envelope","getElementsByTagNameNS","body","fault","parseErrorResponse","faultstring","statusCode","message","idStart","idEnd","detail","getElementsByTagName","exception","node","firstChild","nodeValue","lastIndexOf","indexOf","substring","errorString","getServerURLFromMessage","url","getHTTPMethod","getResponseType","getLicenseMessage","call","getErrorResponse","__dashjs_factory_name","dashjs","FactoryMaker","getSingletonFactory"],"mappings":"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","file":"PlayReady.js","sourcesContent":["/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/* global escape: true */\r\n\r\n/**\r\n * Microsoft PlayReady Test License Server\r\n *\r\n * For testing content that uses the PlayReady test server at\r\n *\r\n * @implements LicenseServer\r\n * @class\r\n * @ignore\r\n */\r\n\r\nfunction PlayReady() {\r\n\r\n    let instance;\r\n\r\n    const soap = 'http://schemas.xmlsoap.org/soap/envelope/';\r\n\r\n    function uintToString(arrayBuffer) {\r\n        const encodedString = String.fromCharCode.apply(null, new Uint8Array(arrayBuffer));\r\n        const decodedString = decodeURIComponent(escape(encodedString));\r\n        return decodedString;\r\n    }\r\n\r\n    function parseServerResponse(serverResponse) {\r\n        if (window.DOMParser) {\r\n            const stringResponse = uintToString(serverResponse);\r\n            const parser = new window.DOMParser();\r\n            const xmlDoc = parser.parseFromString(stringResponse, 'text/xml');\r\n            const envelope = xmlDoc ? xmlDoc.getElementsByTagNameNS(soap, 'Envelope')[0] : null;\r\n            const body = envelope ? envelope.getElementsByTagNameNS(soap, 'Body')[0] : null;\r\n            const fault = body ? body.getElementsByTagNameNS(soap, 'Fault')[0] : null;\r\n\r\n            if (fault) {\r\n                return null;\r\n            }\r\n        }\r\n        return serverResponse;\r\n    }\r\n\r\n    function parseErrorResponse(serverResponse) {\r\n        let faultstring = '';\r\n        let statusCode = '';\r\n        let message = '';\r\n        let idStart = -1;\r\n        let idEnd = -1;\r\n\r\n        if (window.DOMParser) {\r\n            const stringResponse = uintToString(serverResponse);\r\n            const parser = new window.DOMParser();\r\n            const xmlDoc = parser.parseFromString(stringResponse, 'text/xml');\r\n            const envelope = xmlDoc ? xmlDoc.getElementsByTagNameNS(soap, 'Envelope')[0] : null;\r\n            const body = envelope ? envelope.getElementsByTagNameNS(soap, 'Body')[0] : null;\r\n            const fault = body ? body.getElementsByTagNameNS(soap, 'Fault')[0] : null;\r\n            const detail = fault ? fault.getElementsByTagName('detail')[0] : null;\r\n            const exception = detail ? detail.getElementsByTagName('Exception')[0] : null;\r\n            let node = null;\r\n\r\n            if (fault === null) {\r\n                return stringResponse;\r\n            }\r\n\r\n            node = fault.getElementsByTagName('faultstring')[0].firstChild;\r\n            faultstring = node ? node.nodeValue : null;\r\n\r\n            if (exception !== null) {\r\n                node = exception.getElementsByTagName('StatusCode')[0];\r\n                statusCode = node ? node.firstChild.nodeValue : null;\r\n                node = exception.getElementsByTagName('Message')[0];\r\n                message = node ? node.firstChild.nodeValue : null;\r\n                idStart = message ? message.lastIndexOf('[') + 1 : -1;\r\n                idEnd = message ? message.indexOf(']') : -1;\r\n                message = message ? message.substring(idStart, idEnd) : '';\r\n            }\r\n        }\r\n\r\n        let errorString = `code: ${statusCode}, name: ${faultstring}`;\r\n        if (message) {\r\n            errorString += `, message: ${message}`;\r\n        }\r\n\r\n        return errorString;\r\n    }\r\n\r\n    function getServerURLFromMessage(url /*, message, messageType*/) {\r\n        return url;\r\n    }\r\n\r\n    function getHTTPMethod(/*messageType*/) {\r\n        return 'POST';\r\n    }\r\n\r\n    function getResponseType(/*keySystemStr, messageType*/) {\r\n        return 'arraybuffer';\r\n    }\r\n\r\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\r\n        return parseServerResponse.call(this, serverResponse);\r\n    }\r\n\r\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\r\n        return parseErrorResponse.call(this, serverResponse);\r\n    }\r\n\r\n    instance = {\r\n        getServerURLFromMessage: getServerURLFromMessage,\r\n        getHTTPMethod: getHTTPMethod,\r\n        getResponseType: getResponseType,\r\n        getLicenseMessage: getLicenseMessage,\r\n        getErrorResponse: getErrorResponse\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nPlayReady.__dashjs_factory_name = 'PlayReady';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(PlayReady); /* jshint ignore:line */"]}