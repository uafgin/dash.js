{"version":3,"sources":["../../../../../src/streaming/models/MediaPlayerModel.js"],"names":["DEFAULT_MIN_BUFFER_TIME","DEFAULT_MIN_BUFFER_TIME_FAST_SWITCH","DEFAULT_LOW_LATENCY_LIVE_DELAY","LOW_LATENCY_REDUCTION_FACTOR","LOW_LATENCY_MULTIPLY_FACTOR","DEFAULT_LIVE_LATENCY_CATCHUP_THRESHOLD_FACTOR","MINIMUM_LIVE_LATENCY_CATCHUP","DEFAULT_XHR_WITH_CREDENTIALS","MediaPlayerModel","instance","UTCTimingSources","xhrWithCredentials","customABRRule","context","settings","getInstance","setup","default","findABRCustomRuleIndex","rulename","i","length","getABRCustomRules","addABRCustomRule","type","rule","ABRRulesCollection","ABANDON_FRAGMENT_RULES","QUALITY_SWITCH_RULES","Constants","BAD_ARGUMENT_ERROR","index","push","removeABRCustomRule","splice","getStableBufferTime","get","streaming","lowLatencyEnabled","getLiveDelay","stableBufferTime","fastSwitchEnabled","getRetryAttemptsForType","lowLatencyMultiplyFactor","isNaN","retryAttempts","getRetryIntervalsForType","lowLatencyReductionFactor","retryIntervals","liveDelay","getLiveCatchupLatencyThreshold","liveCatchupLatencyThreshold","liveCatchup","latencyThreshold","Math","max","liveCatchupMinDrift","minDrift","maximumLiveDelay","NaN","e","addUTCTimingSource","schemeIdUri","value","removeUTCTimingSource","vo","UTCTiming","getUTCTimingSources","forEach","obj","idx","clearDefaultUTCTimingSources","restoreDefaultUTCTimingSources","defaultUtcTimingSource","utcSynchronization","defaultTimingSource","scheme","setXHRWithCredentialsForType","Object","keys","key","getXHRWithCredentialsForType","useCreds","undefined","getDefaultUtcTimingSource","reset","__dashjs_factory_name","FactoryMaker","getSingletonFactory"],"mappings":"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","file":"MediaPlayerModel.js","sourcesContent":["/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport UTCTiming from '../../dash/vo/UTCTiming';\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\nimport Constants from '../constants/Constants';\r\nimport ABRRulesCollection from '../rules/abr/ABRRulesCollection';\r\nimport Settings from '../../core/Settings';\r\nimport {checkParameterType} from '../utils/SupervisorTools';\r\n\r\n\r\nconst DEFAULT_MIN_BUFFER_TIME = 12;\r\nconst DEFAULT_MIN_BUFFER_TIME_FAST_SWITCH = 20;\r\n\r\nconst DEFAULT_LOW_LATENCY_LIVE_DELAY = 3.0;\r\nconst LOW_LATENCY_REDUCTION_FACTOR = 10;\r\nconst LOW_LATENCY_MULTIPLY_FACTOR = 5;\r\nconst DEFAULT_LIVE_LATENCY_CATCHUP_THRESHOLD_FACTOR = 4;\r\nconst MINIMUM_LIVE_LATENCY_CATCHUP = 5;\r\n\r\nconst DEFAULT_XHR_WITH_CREDENTIALS = false;\r\n\r\nfunction MediaPlayerModel() {\r\n\r\n    let instance,\r\n        UTCTimingSources,\r\n        xhrWithCredentials,\r\n        customABRRule;\r\n\r\n    const context = this.context;\r\n    const settings = Settings(context).getInstance();\r\n\r\n    function setup() {\r\n        UTCTimingSources = [];\r\n        xhrWithCredentials = {\r\n            default: DEFAULT_XHR_WITH_CREDENTIALS\r\n        };\r\n        customABRRule = [];\r\n    }\r\n\r\n    //TODO Should we use Object.define to have setters/getters? makes more readable code on other side.\r\n    function findABRCustomRuleIndex(rulename) {\r\n        let i;\r\n        for (i = 0; i < customABRRule.length; i++) {\r\n            if (customABRRule[i].rulename === rulename) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    function getABRCustomRules() {\r\n        return customABRRule;\r\n    }\r\n\r\n    function addABRCustomRule(type, rulename, rule) {\r\n        if (typeof type !== 'string' || (type !== ABRRulesCollection.ABANDON_FRAGMENT_RULES && type !== ABRRulesCollection.QUALITY_SWITCH_RULES) ||\r\n            typeof rulename !== 'string') {\r\n            throw Constants.BAD_ARGUMENT_ERROR;\r\n        }\r\n        let index = findABRCustomRuleIndex(rulename);\r\n        if (index === -1) {\r\n            // add rule\r\n            customABRRule.push({\r\n                type: type,\r\n                rulename: rulename,\r\n                rule: rule\r\n            });\r\n        } else {\r\n            // update rule\r\n            customABRRule[index].type = type;\r\n            customABRRule[index].rule = rule;\r\n        }\r\n    }\r\n\r\n    function removeABRCustomRule(rulename) {\r\n        if (rulename) {\r\n            let index = findABRCustomRuleIndex(rulename);\r\n            //if no rulename custom rule has been found, do nothing\r\n            if (index !== -1) {\r\n                // remove rule\r\n                customABRRule.splice(index, 1);\r\n            }\r\n        } else {\r\n            //if no rulename is defined, remove all ABR custome rules\r\n            customABRRule = [];\r\n        }\r\n    }\r\n\r\n    function getStableBufferTime() {\r\n        if (settings.get().streaming.lowLatencyEnabled) {\r\n            return getLiveDelay() * 0.6;\r\n        }\r\n\r\n        const stableBufferTime = settings.get().streaming.stableBufferTime;\r\n        return stableBufferTime > -1 ? stableBufferTime : settings.get().streaming.fastSwitchEnabled ? DEFAULT_MIN_BUFFER_TIME_FAST_SWITCH : DEFAULT_MIN_BUFFER_TIME;\r\n    }\r\n\r\n    function getRetryAttemptsForType(type) {\r\n        const lowLatencyMultiplyFactor = !isNaN(settings.get().streaming.retryAttempts.lowLatencyMultiplyFactor) ? settings.get().streaming.retryAttempts.lowLatencyMultiplyFactor : LOW_LATENCY_MULTIPLY_FACTOR;\r\n\r\n        return settings.get().streaming.lowLatencyEnabled ? settings.get().streaming.retryAttempts[type] * lowLatencyMultiplyFactor : settings.get().streaming.retryAttempts[type];\r\n    }\r\n\r\n    function getRetryIntervalsForType(type) {\r\n        const lowLatencyReductionFactor = !isNaN(settings.get().streaming.retryIntervals.lowLatencyReductionFactor) ? settings.get().streaming.retryIntervals.lowLatencyReductionFactor : LOW_LATENCY_REDUCTION_FACTOR;\r\n\r\n        return settings.get().streaming.lowLatencyEnabled ? settings.get().streaming.retryIntervals[type] / lowLatencyReductionFactor : settings.get().streaming.retryIntervals[type];\r\n    }\r\n\r\n    function getLiveDelay() {\r\n        if (settings.get().streaming.lowLatencyEnabled) {\r\n            return settings.get().streaming.liveDelay || DEFAULT_LOW_LATENCY_LIVE_DELAY;\r\n        }\r\n        return settings.get().streaming.liveDelay;\r\n    }\r\n\r\n    function getLiveCatchupLatencyThreshold() {\r\n        try {\r\n            const liveCatchupLatencyThreshold = settings.get().streaming.liveCatchup.latencyThreshold;\r\n            const liveDelay = getLiveDelay();\r\n\r\n            if (liveCatchupLatencyThreshold !== null && !isNaN(liveCatchupLatencyThreshold)) {\r\n                return Math.max(liveCatchupLatencyThreshold, liveDelay);\r\n            }\r\n\r\n\r\n            const liveCatchupMinDrift = settings.get().streaming.liveCatchup.minDrift;\r\n            const maximumLiveDelay = !isNaN(liveDelay) && liveDelay ? !isNaN(liveCatchupMinDrift) ? settings.get().streaming.liveCatchup.minDrift + getLiveDelay() : getLiveDelay() : NaN;\r\n\r\n            if (maximumLiveDelay && !isNaN(maximumLiveDelay)) {\r\n                return Math.max(maximumLiveDelay * DEFAULT_LIVE_LATENCY_CATCHUP_THRESHOLD_FACTOR, MINIMUM_LIVE_LATENCY_CATCHUP);\r\n            }\r\n\r\n            return NaN;\r\n\r\n        } catch (e) {\r\n            return NaN;\r\n        }\r\n    }\r\n\r\n    function addUTCTimingSource(schemeIdUri, value) {\r\n        removeUTCTimingSource(schemeIdUri, value); //check if it already exists and remove if so.\r\n        let vo = new UTCTiming();\r\n        vo.schemeIdUri = schemeIdUri;\r\n        vo.value = value;\r\n        UTCTimingSources.push(vo);\r\n    }\r\n\r\n    function getUTCTimingSources() {\r\n        return UTCTimingSources;\r\n    }\r\n\r\n    function removeUTCTimingSource(schemeIdUri, value) {\r\n        checkParameterType(schemeIdUri, 'string');\r\n        checkParameterType(value, 'string');\r\n        UTCTimingSources.forEach(function (obj, idx) {\r\n            if (obj.schemeIdUri === schemeIdUri && obj.value === value) {\r\n                UTCTimingSources.splice(idx, 1);\r\n            }\r\n        });\r\n    }\r\n\r\n    function clearDefaultUTCTimingSources() {\r\n        UTCTimingSources = [];\r\n    }\r\n\r\n    function restoreDefaultUTCTimingSources() {\r\n        let defaultUtcTimingSource = settings.get().streaming.utcSynchronization.defaultTimingSource;\r\n        addUTCTimingSource(defaultUtcTimingSource.scheme, defaultUtcTimingSource.value);\r\n    }\r\n\r\n    function setXHRWithCredentialsForType(type, value) {\r\n        if (!type) {\r\n            Object.keys(xhrWithCredentials).forEach(key => {\r\n                setXHRWithCredentialsForType(key, value);\r\n            });\r\n        } else {\r\n            xhrWithCredentials[type] = !!value;\r\n        }\r\n    }\r\n\r\n    function getXHRWithCredentialsForType(type) {\r\n        const useCreds = xhrWithCredentials[type];\r\n\r\n        return useCreds === undefined ? xhrWithCredentials.default : useCreds;\r\n    }\r\n\r\n    function getDefaultUtcTimingSource() {\r\n        return settings.get().streaming.utcSynchronization.defaultTimingSource;\r\n    }\r\n\r\n    function reset() {\r\n        //TODO need to figure out what props to persist across sessions and which to reset if any.\r\n        //setup();\r\n    }\r\n\r\n    instance = {\r\n        getABRCustomRules,\r\n        addABRCustomRule,\r\n        removeABRCustomRule,\r\n        getStableBufferTime,\r\n        getRetryAttemptsForType,\r\n        getRetryIntervalsForType,\r\n        getLiveDelay,\r\n        getLiveCatchupLatencyThreshold,\r\n        addUTCTimingSource,\r\n        removeUTCTimingSource,\r\n        getUTCTimingSources,\r\n        clearDefaultUTCTimingSources,\r\n        restoreDefaultUTCTimingSources,\r\n        setXHRWithCredentialsForType,\r\n        getXHRWithCredentialsForType,\r\n        getDefaultUtcTimingSource,\r\n        reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\n//TODO see if you can move this and not export and just getter to get default value.\r\nMediaPlayerModel.__dashjs_factory_name = 'MediaPlayerModel';\r\nexport default FactoryMaker.getSingletonFactory(MediaPlayerModel);\r\n"]}