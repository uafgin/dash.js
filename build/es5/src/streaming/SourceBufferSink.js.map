{"version":3,"sources":["../../../../src/streaming/SourceBufferSink.js"],"names":["MAX_ALLOWED_DISCONTINUITY","SourceBufferSink","mediaSource","mediaInfo","onAppendedCallback","oldBuffer","context","eventBus","getInstance","instance","type","logger","buffer","isAppendingInProgress","intervalId","callbacks","appendQueue","onAppended","setup","getLogger","codec","match","Error","addSourceBuffer","changeType","debug","updateAppendWindow","CHECK_INTERVAL","addEventListener","updateEndHandler","errHandler","err","setInterval","checkIsUpdateEnded","ex","isText","indexOf","textController","getTextSourceBuffer","getType","reset","keepBuffer","removeEventListener","clearInterval","getClassName","removeSourceBuffer","e","error","getBuffer","getAllBufferRanges","buffered","message","hasDiscontinuitiesAfter","time","ranges","length","i","len","start","end","append","chunk","DashJSError","Errors","APPEND_ERROR_CODE","APPEND_ERROR_MESSAGE","push","waitForUpdateEnd","appendNextInQueue","bind","updateTimestampOffset","MSETimeOffset","timestampOffset","isNaN","sInfo","appendWindowEnd","duration","appendWindowStart","isFinite","warn","remove","forceRemoval","sourceBufferSink","readyState","trigger","Events","SOURCEBUFFER_REMOVE_COMPLETED","from","to","unintended","code","nextChunk","splice","oldRanges","afterSuccess","newRanges","checkBufferGapsAfterAppend","call","bytes","appendBuffer","fatal","isChunkAlignedWithRange","Math","round","abort","setTextTrack","executeCallback","cb","shift","updating","callback","__dashjs_factory_name","factory","FactoryMaker","getClassFactory"],"mappings":"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","file":"SourceBufferSink.js","sourcesContent":["/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport Debug from '../core/Debug';\r\nimport DashJSError from './vo/DashJSError';\r\nimport EventBus from '../core/EventBus';\r\nimport Events from '../core/events/Events';\r\nimport FactoryMaker from '../core/FactoryMaker';\r\nimport TextController from './text/TextController';\r\nimport Errors from '../core/errors/Errors';\r\n\r\nconst MAX_ALLOWED_DISCONTINUITY = 0.1; // 100 milliseconds\r\n\r\n/**\r\n * @class SourceBufferSink\r\n * @ignore\r\n * @implements FragmentSink\r\n */\r\nfunction SourceBufferSink(mediaSource, mediaInfo, onAppendedCallback, oldBuffer) {\r\n    const context = this.context;\r\n    const eventBus = EventBus(context).getInstance();\r\n\r\n    let instance,\r\n        type,\r\n        logger,\r\n        buffer,\r\n        isAppendingInProgress,\r\n        intervalId;\r\n\r\n    let callbacks = [];\r\n    let appendQueue = [];\r\n    let onAppended = onAppendedCallback;\r\n\r\n    function setup() {\r\n        logger = Debug(context).getInstance().getLogger(instance);\r\n        isAppendingInProgress = false;\r\n\r\n        type = mediaInfo.type;\r\n        const codec = mediaInfo.codec;\r\n        try {\r\n            // Safari claims to support anything starting 'application/mp4'.\r\n            // it definitely doesn't understand 'application/mp4;codecs=\"stpp\"'\r\n            // - currently no browser does, so check for it and use our own\r\n            // implementation. The same is true for codecs=\"wvtt\".\r\n            if (codec.match(/application\\/mp4;\\s*codecs=\"(stpp|wvtt).*\"/i)) {\r\n                throw new Error('not really supported');\r\n            }\r\n            buffer = oldBuffer ? oldBuffer : mediaSource.addSourceBuffer(codec);\r\n            if (buffer.changeType && oldBuffer) {\r\n                logger.debug('Doing period transition with changeType');\r\n                buffer.changeType(codec);\r\n            }\r\n\r\n            updateAppendWindow();\r\n\r\n            const CHECK_INTERVAL = 50;\r\n            // use updateend event if possible\r\n            if (typeof buffer.addEventListener === 'function') {\r\n                try {\r\n                    buffer.addEventListener('updateend', updateEndHandler, false);\r\n                    buffer.addEventListener('error', errHandler, false);\r\n                    buffer.addEventListener('abort', errHandler, false);\r\n\r\n                } catch (err) {\r\n                    // use setInterval to periodically check if updating has been completed\r\n                    intervalId = setInterval(checkIsUpdateEnded, CHECK_INTERVAL);\r\n                }\r\n            } else {\r\n                // use setInterval to periodically check if updating has been completed\r\n                intervalId = setInterval(checkIsUpdateEnded, CHECK_INTERVAL);\r\n            }\r\n        } catch (ex) {\r\n            // Note that in the following, the quotes are open to allow for extra text after stpp and wvtt\r\n            if ((mediaInfo.isText) || (codec.indexOf('codecs=\"stpp') !== -1) || (codec.indexOf('codecs=\"wvtt') !== -1)) {\r\n                const textController = TextController(context).getInstance();\r\n                buffer = textController.getTextSourceBuffer();\r\n            } else {\r\n                throw ex;\r\n            }\r\n        }\r\n    }\r\n\r\n    function getType() {\r\n        return type;\r\n    }\r\n\r\n    function reset(keepBuffer) {\r\n        if (buffer) {\r\n            if (typeof buffer.removeEventListener === 'function') {\r\n                buffer.removeEventListener('updateend', updateEndHandler, false);\r\n                buffer.removeEventListener('error', errHandler, false);\r\n                buffer.removeEventListener('abort', errHandler, false);\r\n            }\r\n            clearInterval(intervalId);\r\n            callbacks = [];\r\n            if (!keepBuffer) {\r\n                try {\r\n                    if (!buffer.getClassName || buffer.getClassName() !== 'TextSourceBuffer') {\r\n                        logger.debug(`Removing sourcebuffer from media source`);\r\n                        mediaSource.removeSourceBuffer(buffer);\r\n                    }\r\n                } catch (e) {\r\n                    logger.error('Failed to remove source buffer from media source.');\r\n                }\r\n                buffer = null;\r\n            }\r\n            isAppendingInProgress = false;\r\n        }\r\n        appendQueue = [];\r\n        onAppended = null;\r\n    }\r\n\r\n    function getBuffer() {\r\n        return buffer;\r\n    }\r\n\r\n    function getAllBufferRanges() {\r\n        try {\r\n            return buffer.buffered;\r\n        } catch (e) {\r\n            logger.error('getAllBufferRanges exception: ' + e.message);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function hasDiscontinuitiesAfter(time) {\r\n        try {\r\n            const ranges = getAllBufferRanges();\r\n            if (ranges && ranges.length > 1) {\r\n                for (let i = 0, len = ranges.length; i < len; i++) {\r\n                    if (i > 0) {\r\n                        if (time < ranges.start(i) && ranges.start(i) > ranges.end(i - 1) + MAX_ALLOWED_DISCONTINUITY) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } catch (e) {\r\n            logger.error('hasDiscontinuities exception: ' + e.message);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function append(chunk) {\r\n        if (!chunk) {\r\n            onAppended({\r\n                chunk: chunk,\r\n                error: new DashJSError(Errors.APPEND_ERROR_CODE, Errors.APPEND_ERROR_MESSAGE)\r\n            });\r\n            return;\r\n        }\r\n        appendQueue.push(chunk);\r\n        if (!isAppendingInProgress) {\r\n            waitForUpdateEnd(appendNextInQueue.bind(this));\r\n        }\r\n    }\r\n\r\n    function updateTimestampOffset(MSETimeOffset) {\r\n        if (buffer.timestampOffset !== MSETimeOffset && !isNaN(MSETimeOffset)) {\r\n            waitForUpdateEnd(() => {\r\n                if (MSETimeOffset < 0) {\r\n                    MSETimeOffset += 0.001;\r\n                }\r\n                buffer.timestampOffset = MSETimeOffset;\r\n            });\r\n        }\r\n    }\r\n\r\n    function updateAppendWindow(sInfo) {\r\n        if (!buffer) {\r\n            return;\r\n        }\r\n        waitForUpdateEnd(() => {\r\n            try {\r\n                let appendWindowEnd = mediaSource.duration;\r\n                let appendWindowStart = 0;\r\n                if (sInfo && !isNaN(sInfo.start) && !isNaN(sInfo.duration) && isFinite(sInfo.duration)) {\r\n                    appendWindowEnd = sInfo.start + sInfo.duration;\r\n                }\r\n                if (sInfo && !isNaN(sInfo.start)) {\r\n                    appendWindowStart = sInfo.start;\r\n                }\r\n                buffer.appendWindowStart = 0;\r\n                buffer.appendWindowEnd = appendWindowEnd;\r\n                buffer.appendWindowStart = appendWindowStart;\r\n                logger.debug(`Updated append window. Set start to ${buffer.appendWindowStart} and end to ${buffer.appendWindowEnd}`);\r\n            } catch (e) {\r\n                logger.warn(`Failed to set append window`);\r\n            }\r\n        });\r\n    }\r\n\r\n    function remove(start, end, forceRemoval) {\r\n        const sourceBufferSink = this;\r\n        // make sure that the given time range is correct. Otherwise we will get InvalidAccessError\r\n        waitForUpdateEnd(function () {\r\n            try {\r\n                if ((start >= 0) && (end > start) && (forceRemoval || mediaSource.readyState !== 'ended')) {\r\n                    buffer.remove(start, end);\r\n                }\r\n                // updating is in progress, we should wait for it to complete before signaling that this operation is done\r\n                waitForUpdateEnd(function () {\r\n                    eventBus.trigger(Events.SOURCEBUFFER_REMOVE_COMPLETED, {\r\n                        buffer: sourceBufferSink,\r\n                        from: start,\r\n                        to: end,\r\n                        unintended: false\r\n                    });\r\n                });\r\n            } catch (err) {\r\n                eventBus.trigger(Events.SOURCEBUFFER_REMOVE_COMPLETED, {\r\n                    buffer: sourceBufferSink,\r\n                    from: start,\r\n                    to: end,\r\n                    unintended: false,\r\n                    error: new DashJSError(err.code, err.message)\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    function appendNextInQueue() {\r\n        const sourceBufferSink = this;\r\n\r\n        if (appendQueue.length > 0) {\r\n            isAppendingInProgress = true;\r\n            const nextChunk = appendQueue[0];\r\n            appendQueue.splice(0, 1);\r\n            let oldRanges = [];\r\n            const afterSuccess = function () {\r\n                // Safari sometimes drops a portion of a buffer after appending. Handle these situations here\r\n                const newRanges = getAllBufferRanges();\r\n                checkBufferGapsAfterAppend(sourceBufferSink, oldRanges, newRanges, nextChunk);\r\n                if (appendQueue.length > 0) {\r\n                    appendNextInQueue.call(this);\r\n                } else {\r\n                    isAppendingInProgress = false;\r\n                    if (onAppended) {\r\n                        onAppended({\r\n                            chunk: nextChunk\r\n                        });\r\n                    }\r\n                }\r\n            };\r\n\r\n            try {\r\n                if (nextChunk.bytes.length === 0) {\r\n                    afterSuccess.call(this);\r\n                } else {\r\n                    oldRanges = getAllBufferRanges();\r\n                    if (buffer.appendBuffer) {\r\n                        buffer.appendBuffer(nextChunk.bytes);\r\n                    } else {\r\n                        buffer.append(nextChunk.bytes, nextChunk);\r\n                    }\r\n                    // updating is in progress, we should wait for it to complete before signaling that this operation is done\r\n                    waitForUpdateEnd(afterSuccess.bind(this));\r\n                }\r\n            } catch (err) {\r\n                logger.fatal('SourceBuffer append failed \"' + err + '\"');\r\n                if (appendQueue.length > 0) {\r\n                    appendNextInQueue();\r\n                } else {\r\n                    isAppendingInProgress = false;\r\n                }\r\n\r\n                if (onAppended) {\r\n                    onAppended({\r\n                        chunk: nextChunk,\r\n                        error: new DashJSError(err.code, err.message)\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function checkBufferGapsAfterAppend(buffer, oldRanges, newRanges, chunk) {\r\n        if (oldRanges && oldRanges.length > 0 && oldRanges.length < newRanges.length &&\r\n            isChunkAlignedWithRange(oldRanges, chunk)) {\r\n            // A split in the range was created while appending\r\n            eventBus.trigger(Events.SOURCEBUFFER_REMOVE_COMPLETED, {\r\n                buffer: buffer,\r\n                from: newRanges.end(newRanges.length - 2),\r\n                to: newRanges.start(newRanges.length - 1),\r\n                unintended: true\r\n            });\r\n        }\r\n    }\r\n\r\n    function isChunkAlignedWithRange(oldRanges, chunk) {\r\n        for (let i = 0; i < oldRanges.length; i++) {\r\n            const start = Math.round(oldRanges.start(i));\r\n            const end = Math.round(oldRanges.end(i));\r\n            if (end === chunk.start || start === chunk.end || (chunk.start >= start && chunk.end <= end)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function abort() {\r\n        try {\r\n            if (mediaSource.readyState === 'open') {\r\n                buffer.abort();\r\n            } else if (buffer.setTextTrack && mediaSource.readyState === 'ended') {\r\n                buffer.abort(); //The cues need to be removed from the TextSourceBuffer via a call to abort()\r\n            }\r\n        } catch (ex) {\r\n            logger.error('SourceBuffer append abort failed: \"' + ex + '\"');\r\n        }\r\n        appendQueue = [];\r\n    }\r\n\r\n    function executeCallback() {\r\n        if (callbacks.length > 0) {\r\n            const cb = callbacks.shift();\r\n            if (buffer.updating) {\r\n                waitForUpdateEnd(cb);\r\n            } else {\r\n                cb();\r\n                // Try to execute next callback if still not updating\r\n                executeCallback();\r\n            }\r\n        }\r\n    }\r\n\r\n    function checkIsUpdateEnded() {\r\n        // if updating is still in progress do nothing and wait for the next check again.\r\n        if (buffer.updating) return;\r\n        // updating is completed, now we can stop checking and resolve the promise\r\n        executeCallback();\r\n    }\r\n\r\n    function updateEndHandler() {\r\n        if (buffer.updating) return;\r\n\r\n        executeCallback();\r\n    }\r\n\r\n    function errHandler() {\r\n        logger.error('SourceBufferSink error');\r\n    }\r\n\r\n    function waitForUpdateEnd(callback) {\r\n        callbacks.push(callback);\r\n\r\n        if (!buffer.updating) {\r\n            executeCallback();\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        getType: getType,\r\n        getAllBufferRanges: getAllBufferRanges,\r\n        getBuffer: getBuffer,\r\n        append: append,\r\n        remove: remove,\r\n        abort: abort,\r\n        reset: reset,\r\n        updateTimestampOffset: updateTimestampOffset,\r\n        hasDiscontinuitiesAfter: hasDiscontinuitiesAfter,\r\n        waitForUpdateEnd: waitForUpdateEnd,\r\n        updateAppendWindow\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nSourceBufferSink.__dashjs_factory_name = 'SourceBufferSink';\r\nconst factory = FactoryMaker.getClassFactory(SourceBufferSink);\r\nexport default factory;\r\n"]}