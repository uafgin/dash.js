{"version":3,"sources":["../../../../../src/streaming/vo/FragmentRequest.js"],"names":["FragmentRequest","url","action","ACTION_DOWNLOAD","startTime","NaN","mediaStartTime","mediaType","mediaInfo","type","duration","timescale","range","serviceLocation","requestStartDate","firstByteDate","requestEndDate","quality","index","availabilityStartTime","availabilityEndTime","wallStartTime","bytesLoaded","bytesTotal","delayLoadingTime","responseType","representationId","HTTPRequest","INIT_SEGMENT_TYPE","info","init","MEDIA_SEGMENT_TYPE","start","end","ACTION_COMPLETE"],"mappings":"okBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+BA,sD,iJAEA;;;MAIMA,gB,YACF,yBAAYC,GAAZ,CAAiB,uCACb,KAAKC,MAAL,CAAcF,gBAAgBG,eAA9B,CACA,KAAKC,SAAL,CAAiBC,GAAjB,CACA,KAAKC,cAAL,CAAsBD,GAAtB,CACA,KAAKE,SAAL,CAAiB,IAAjB,CACA,KAAKC,SAAL,CAAiB,IAAjB,CACA,KAAKC,IAAL,CAAY,IAAZ,CACA,KAAKC,QAAL,CAAgBL,GAAhB,CACA,KAAKM,SAAL,CAAiBN,GAAjB,CACA,KAAKO,KAAL,CAAa,IAAb,CACA,KAAKX,GAAL,CAAWA,KAAO,IAAlB,CACA,KAAKY,eAAL,CAAuB,IAAvB,CACA,KAAKC,gBAAL,CAAwB,IAAxB,CACA,KAAKC,aAAL,CAAqB,IAArB,CACA,KAAKC,cAAL,CAAsB,IAAtB,CACA,KAAKC,OAAL,CAAeZ,GAAf,CACA,KAAKa,KAAL,CAAab,GAAb,CACA,KAAKc,qBAAL,CAA6B,IAA7B,CACA,KAAKC,mBAAL,CAA2B,IAA3B,CACA,KAAKC,aAAL,CAAqB,IAArB,CACA,KAAKC,WAAL,CAAmBjB,GAAnB,CACA,KAAKkB,UAAL,CAAkBlB,GAAlB,CACA,KAAKmB,gBAAL,CAAwBnB,GAAxB,CACA,KAAKoB,YAAL,CAAoB,aAApB,CACA,KAAKC,gBAAL,CAAwB,IAAxB,CACH,C,qGAEyB,CACtB,MAAQ,MAAKjB,IAAL,EAAa,KAAKA,IAAL,GAAckB,yBAAYC,iBAA/C,CACH,C,wCAEOC,I,CAAM,CACV,KAAKpB,IAAL,CAAYoB,MAAQA,KAAKC,IAAb,CAAoBH,yBAAYC,iBAAhC,CAAoDD,yBAAYI,kBAA5E,CACA,KAAK9B,GAAL,CAAW4B,MAAQA,KAAK5B,GAAb,CAAmB4B,KAAK5B,GAAxB,CAA8B,IAAzC,CACA,KAAKW,KAAL,CAAaiB,MAAQA,KAAKjB,KAAb,CAAqBiB,KAAKjB,KAAL,CAAWoB,KAAX,CAAmB,GAAnB,CAAyBH,KAAKjB,KAAL,CAAWqB,GAAzD,CAA+D,IAA5E,CACA,KAAK1B,SAAL,CAAiBsB,MAAQA,KAAKtB,SAAb,CAAyBsB,KAAKtB,SAA9B,CAA0C,IAA3D,CACH,C,+BAGLP,gBAAgBG,eAAhB,CAAkC,UAAlC,CACAH,gBAAgBkC,eAAhB,CAAkC,UAAlC,C,gBAEelC,e","file":"FragmentRequest.js","sourcesContent":["/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport { HTTPRequest } from '../vo/metrics/HTTPRequest';\r\n\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass FragmentRequest {\r\n    constructor(url) {\r\n        this.action = FragmentRequest.ACTION_DOWNLOAD;\r\n        this.startTime = NaN;\r\n        this.mediaStartTime = NaN;\r\n        this.mediaType = null;\r\n        this.mediaInfo = null;\r\n        this.type = null;\r\n        this.duration = NaN;\r\n        this.timescale = NaN;\r\n        this.range = null;\r\n        this.url = url || null;\r\n        this.serviceLocation = null;\r\n        this.requestStartDate = null;\r\n        this.firstByteDate = null;\r\n        this.requestEndDate = null;\r\n        this.quality = NaN;\r\n        this.index = NaN;\r\n        this.availabilityStartTime = null;\r\n        this.availabilityEndTime = null;\r\n        this.wallStartTime = null;\r\n        this.bytesLoaded = NaN;\r\n        this.bytesTotal = NaN;\r\n        this.delayLoadingTime = NaN;\r\n        this.responseType = 'arraybuffer';\r\n        this.representationId = null;\r\n    }\r\n\r\n    isInitializationRequest() {\r\n        return (this.type && this.type === HTTPRequest.INIT_SEGMENT_TYPE);\r\n    }\r\n\r\n    setInfo(info) {\r\n        this.type = info && info.init ? HTTPRequest.INIT_SEGMENT_TYPE : HTTPRequest.MEDIA_SEGMENT_TYPE;\r\n        this.url = info && info.url ? info.url : null;\r\n        this.range = info && info.range ? info.range.start + '-' + info.range.end : null;\r\n        this.mediaType = info && info.mediaType ? info.mediaType : null;\r\n    }\r\n}\r\n\r\nFragmentRequest.ACTION_DOWNLOAD = 'download';\r\nFragmentRequest.ACTION_COMPLETE = 'complete';\r\n\r\nexport default FragmentRequest;\r\n"]}