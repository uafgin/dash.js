{"version":3,"sources":["../../../../../../src/streaming/vo/metrics/HTTPRequest.js"],"names":["HTTPRequest","tcpid","type","url","actualurl","range","trequest","tresponse","responsecode","interval","trace","_stream","_tfinish","_mediaduration","_quality","_responseHeaders","_serviceLocation","HTTPRequestTrace","s","d","b","GET","HEAD","MPD_TYPE","XLINK_EXPANSION_TYPE","INIT_SEGMENT_TYPE","INDEX_SEGMENT_TYPE","MEDIA_SEGMENT_TYPE","BITSTREAM_SWITCHING_SEGMENT_TYPE","LICENSE","OTHER_TYPE"],"mappings":"uNAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA8BA;;;;;MAMMA,Y,CACF;;OAGA,sBAAc,mCACV;;;WAIA,KAAKC,KAAL,CAAa,IAAb,CACA;;;;;;;;;;;WAYA,KAAKC,IAAL,CAAY,IAAZ,CACA;;;WAIA,KAAKC,GAAL,CAAW,IAAX,CACA;;;WAIA,KAAKC,SAAL,CAAiB,IAAjB,CACA;;;WAIA,KAAKC,KAAL,CAAa,IAAb,CACA;;;WAIA,KAAKC,QAAL,CAAgB,IAAhB,CACA;;;WAIA,KAAKC,SAAL,CAAiB,IAAjB,CACA;;;WAIA,KAAKC,YAAL,CAAoB,IAApB,CACA;;;WAIA,KAAKC,QAAL,CAAgB,IAAhB,CACA;;;WAIA,KAAKC,KAAL,CAAa,EAAb,CAEA;;;WAIA,KAAKC,OAAL,CAAe,IAAf,CACA;;;WAIA,KAAKC,QAAL,CAAgB,IAAhB,CACA;;;WAIA,KAAKC,cAAL,CAAsB,IAAtB,CACA;;;WAIA,KAAKC,QAAL,CAAgB,IAAhB,CACA;;;WAIA,KAAKC,gBAAL,CAAwB,IAAxB,CACA;;;WAIA,KAAKC,gBAAL,CAAwB,IAAxB,CACH,C,CAGL;;;MAIMC,iB,CACF;;MAGA,2BAAc,wCACV;;;WAIA,KAAKC,CAAL,CAAS,IAAT,CACA;;;WAIA,KAAKC,CAAL,CAAS,IAAT,CACA;;;WAIA,KAAKC,CAAL,CAAS,EAAT,CACH,C,CAGLpB,YAAYqB,GAAZ,CAAkB,KAAlB,CACArB,YAAYsB,IAAZ,CAAmB,MAAnB,CACAtB,YAAYuB,QAAZ,CAAuB,KAAvB,CACAvB,YAAYwB,oBAAZ,CAAmC,gBAAnC,CACAxB,YAAYyB,iBAAZ,CAAgC,uBAAhC,CACAzB,YAAY0B,kBAAZ,CAAiC,cAAjC,CACA1B,YAAY2B,kBAAZ,CAAiC,cAAjC,CACA3B,YAAY4B,gCAAZ,CAA+C,2BAA/C,CACA5B,YAAY6B,OAAZ,CAAsB,SAAtB,CACA7B,YAAY8B,UAAZ,CAAyB,OAAzB,C,QAES9B,W,CAAAA,W,SAAaiB,gB,CAAAA,gB","file":"HTTPRequest.js","sourcesContent":["/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc This Object holds reference to the HTTPRequest for manifest, fragment and xlink loading.\r\n * Members which are not defined in ISO23009-1 Annex D should be prefixed by a _ so that they are ignored\r\n * by Metrics Reporting code.\r\n * @ignore\r\n */\r\nclass HTTPRequest {\r\n    /**\r\n     * @class\r\n     */\r\n    constructor() {\r\n        /**\r\n         * Identifier of the TCP connection on which the HTTP request was sent.\r\n         * @public\r\n         */\r\n        this.tcpid = null;\r\n        /**\r\n         * This is an optional parameter and should not be included in HTTP request/response transactions for progressive download.\r\n         * The type of the request:\r\n         * - MPD\r\n         * - XLink expansion\r\n         * - Initialization Fragment\r\n         * - Index Fragment\r\n         * - Media Fragment\r\n         * - Bitstream Switching Fragment\r\n         * - other\r\n         * @public\r\n         */\r\n        this.type = null;\r\n        /**\r\n         * The original URL (before any redirects or failures)\r\n         * @public\r\n         */\r\n        this.url = null;\r\n        /**\r\n         * The actual URL requested, if different from above\r\n         * @public\r\n         */\r\n        this.actualurl = null;\r\n        /**\r\n         * The contents of the byte-range-spec part of the HTTP Range header.\r\n         * @public\r\n         */\r\n        this.range = null;\r\n        /**\r\n         * Real-Time | The real time at which the request was sent.\r\n         * @public\r\n         */\r\n        this.trequest = null;\r\n        /**\r\n         * Real-Time | The real time at which the first byte of the response was received.\r\n         * @public\r\n         */\r\n        this.tresponse = null;\r\n        /**\r\n         * The HTTP response code.\r\n         * @public\r\n         */\r\n        this.responsecode = null;\r\n        /**\r\n         * The duration of the throughput trace intervals (ms), for successful requests only.\r\n         * @public\r\n         */\r\n        this.interval = null;\r\n        /**\r\n         * Throughput traces, for successful requests only.\r\n         * @public\r\n         */\r\n        this.trace = [];\r\n\r\n        /**\r\n         * Type of stream (\"audio\" | \"video\" etc..)\r\n         * @public\r\n         */\r\n        this._stream = null;\r\n        /**\r\n         * Real-Time | The real time at which the request finished.\r\n         * @public\r\n         */\r\n        this._tfinish = null;\r\n        /**\r\n         * The duration of the media requests, if available, in seconds.\r\n         * @public\r\n         */\r\n        this._mediaduration = null;\r\n        /**\r\n         * The media segment quality\r\n         * @public\r\n         */\r\n        this._quality = null;\r\n        /**\r\n         * all the response headers from request.\r\n         * @public\r\n         */\r\n        this._responseHeaders = null;\r\n        /**\r\n         * The selected service location for the request. string.\r\n         * @public\r\n         */\r\n        this._serviceLocation = null;\r\n    }\r\n}\r\n\r\n/**\r\n * @classdesc This Object holds reference to the progress of the HTTPRequest.\r\n * @ignore\r\n */\r\nclass HTTPRequestTrace {\r\n    /**\r\n    * @class\r\n    */\r\n    constructor() {\r\n        /**\r\n         * Real-Time | Measurement stream start.\r\n         * @public\r\n         */\r\n        this.s = null;\r\n        /**\r\n         * Measurement stream duration (ms).\r\n         * @public\r\n         */\r\n        this.d = null;\r\n        /**\r\n         * List of integers counting the bytes received in each trace interval within the measurement stream.\r\n         * @public\r\n         */\r\n        this.b = [];\r\n    }\r\n}\r\n\r\nHTTPRequest.GET = 'GET';\r\nHTTPRequest.HEAD = 'HEAD';\r\nHTTPRequest.MPD_TYPE = 'MPD';\r\nHTTPRequest.XLINK_EXPANSION_TYPE = 'XLinkExpansion';\r\nHTTPRequest.INIT_SEGMENT_TYPE = 'InitializationSegment';\r\nHTTPRequest.INDEX_SEGMENT_TYPE = 'IndexSegment';\r\nHTTPRequest.MEDIA_SEGMENT_TYPE = 'MediaSegment';\r\nHTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE = 'BitstreamSwitchingSegment';\r\nHTTPRequest.LICENSE = 'license';\r\nHTTPRequest.OTHER_TYPE = 'other';\r\n\r\nexport { HTTPRequest, HTTPRequestTrace };\r\n"]}